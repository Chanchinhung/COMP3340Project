2024-02-25 12:18:31,015 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+35d7618
------------------------------------------------------------

2024-02-25 12:18:31,016 - mmcls - INFO - Distributed training: False
2024-02-25 12:18:31,209 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=64,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/test',
        ann_file='data/flowers/meta/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_flowers_bs64_lr0.001'
gpu_ids = range(0, 1)

2024-02-25 12:18:31,503 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-02-25 12:18:31,799 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-02-25 12:18:35,274 - mmcls - INFO - Start running, host: cshtimmy@gpu2-comp-102, work_dir: /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs64_lr0.001
2024-02-25 12:18:35,274 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-02-25 12:18:35,274 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-02-25 12:18:35,274 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs64_lr0.001 by HardDiskBackend.
2024-02-25 12:18:48,937 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-02-25 12:18:52,170 - mmcls - INFO - Epoch(val) [1][3]	accuracy_top-1: 10.2941, accuracy_top-5: 44.1176
2024-02-25 12:19:00,951 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-02-25 12:19:03,291 - mmcls - INFO - Epoch(val) [2][3]	accuracy_top-1: 26.4706, accuracy_top-5: 67.6471
2024-02-25 12:19:12,145 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-02-25 12:19:14,358 - mmcls - INFO - Epoch(val) [3][3]	accuracy_top-1: 36.7647, accuracy_top-5: 72.0588
2024-02-25 12:19:23,168 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-02-25 12:19:25,538 - mmcls - INFO - Epoch(val) [4][3]	accuracy_top-1: 38.9706, accuracy_top-5: 75.7353
2024-02-25 12:19:34,502 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-02-25 12:19:36,792 - mmcls - INFO - Epoch(val) [5][3]	accuracy_top-1: 37.5000, accuracy_top-5: 81.6176
2024-02-25 12:19:45,942 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-02-25 12:19:48,410 - mmcls - INFO - Epoch(val) [6][3]	accuracy_top-1: 44.8529, accuracy_top-5: 83.0882
2024-02-25 12:19:57,806 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-02-25 12:20:00,432 - mmcls - INFO - Epoch(val) [7][3]	accuracy_top-1: 40.4412, accuracy_top-5: 86.0294
2024-02-25 12:20:09,722 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-02-25 12:20:12,032 - mmcls - INFO - Epoch(val) [8][3]	accuracy_top-1: 39.7059, accuracy_top-5: 86.0294
2024-02-25 12:20:21,098 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-02-25 12:20:23,541 - mmcls - INFO - Epoch(val) [9][3]	accuracy_top-1: 41.9118, accuracy_top-5: 89.7059
2024-02-25 12:20:32,643 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-02-25 12:20:34,941 - mmcls - INFO - Epoch(val) [10][3]	accuracy_top-1: 44.8529, accuracy_top-5: 88.2353
2024-02-25 12:20:44,672 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-02-25 12:20:46,954 - mmcls - INFO - Epoch(val) [11][3]	accuracy_top-1: 46.3235, accuracy_top-5: 88.9706
2024-02-25 12:20:56,209 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-02-25 12:20:58,534 - mmcls - INFO - Epoch(val) [12][3]	accuracy_top-1: 44.8529, accuracy_top-5: 90.4412
2024-02-25 12:21:07,540 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-02-25 12:21:09,875 - mmcls - INFO - Epoch(val) [13][3]	accuracy_top-1: 44.1176, accuracy_top-5: 91.1765
2024-02-25 12:21:19,335 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-02-25 12:21:21,574 - mmcls - INFO - Epoch(val) [14][3]	accuracy_top-1: 47.7941, accuracy_top-5: 92.6471
2024-02-25 12:21:30,433 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-02-25 12:21:32,768 - mmcls - INFO - Epoch(val) [15][3]	accuracy_top-1: 46.3235, accuracy_top-5: 91.1765
2024-02-25 12:21:42,150 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-02-25 12:21:44,607 - mmcls - INFO - Epoch(val) [16][3]	accuracy_top-1: 47.0588, accuracy_top-5: 90.4412
2024-02-25 12:21:53,495 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-02-25 12:21:55,881 - mmcls - INFO - Epoch(val) [17][3]	accuracy_top-1: 49.2647, accuracy_top-5: 93.3824
2024-02-25 12:22:04,770 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-02-25 12:22:07,585 - mmcls - INFO - Epoch(val) [18][3]	accuracy_top-1: 47.0588, accuracy_top-5: 91.9118
2024-02-25 12:22:17,391 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-02-25 12:22:19,785 - mmcls - INFO - Epoch(val) [19][3]	accuracy_top-1: 50.0000, accuracy_top-5: 92.6471
2024-02-25 12:22:29,803 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-02-25 12:22:32,103 - mmcls - INFO - Epoch(val) [20][3]	accuracy_top-1: 47.0588, accuracy_top-5: 91.9118
2024-02-25 12:22:41,842 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-02-25 12:22:44,140 - mmcls - INFO - Epoch(val) [21][3]	accuracy_top-1: 49.2647, accuracy_top-5: 92.6471
2024-02-25 12:22:53,277 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-02-25 12:22:55,764 - mmcls - INFO - Epoch(val) [22][3]	accuracy_top-1: 47.7941, accuracy_top-5: 92.6471
2024-02-25 12:23:04,905 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-02-25 12:23:07,287 - mmcls - INFO - Epoch(val) [23][3]	accuracy_top-1: 50.7353, accuracy_top-5: 92.6471
2024-02-25 12:23:16,435 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-02-25 12:23:18,852 - mmcls - INFO - Epoch(val) [24][3]	accuracy_top-1: 53.6765, accuracy_top-5: 92.6471
2024-02-25 12:23:27,861 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-02-25 12:23:30,396 - mmcls - INFO - Epoch(val) [25][3]	accuracy_top-1: 50.0000, accuracy_top-5: 92.6471
2024-02-25 12:23:39,741 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-02-25 12:23:42,165 - mmcls - INFO - Epoch(val) [26][3]	accuracy_top-1: 50.7353, accuracy_top-5: 91.9118
2024-02-25 12:23:51,300 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-02-25 12:23:53,580 - mmcls - INFO - Epoch(val) [27][3]	accuracy_top-1: 50.7353, accuracy_top-5: 92.6471
2024-02-25 12:24:02,908 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-02-25 12:24:05,275 - mmcls - INFO - Epoch(val) [28][3]	accuracy_top-1: 52.9412, accuracy_top-5: 91.9118
2024-02-25 12:24:14,286 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-02-25 12:24:16,622 - mmcls - INFO - Epoch(val) [29][3]	accuracy_top-1: 52.2059, accuracy_top-5: 92.6471
2024-02-25 12:24:25,735 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-02-25 12:24:28,186 - mmcls - INFO - Epoch(val) [30][3]	accuracy_top-1: 54.4118, accuracy_top-5: 92.6471
2024-02-25 12:24:37,711 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-02-25 12:24:40,064 - mmcls - INFO - Epoch(val) [31][3]	accuracy_top-1: 51.4706, accuracy_top-5: 91.9118
2024-02-25 12:24:49,568 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-02-25 12:24:51,772 - mmcls - INFO - Epoch(val) [32][3]	accuracy_top-1: 52.2059, accuracy_top-5: 91.9118
2024-02-25 12:25:01,068 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-02-25 12:25:03,311 - mmcls - INFO - Epoch(val) [33][3]	accuracy_top-1: 52.2059, accuracy_top-5: 92.6471
2024-02-25 12:25:12,797 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-02-25 12:25:15,099 - mmcls - INFO - Epoch(val) [34][3]	accuracy_top-1: 51.4706, accuracy_top-5: 92.6471
2024-02-25 12:25:23,976 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-02-25 12:25:26,184 - mmcls - INFO - Epoch(val) [35][3]	accuracy_top-1: 52.9412, accuracy_top-5: 91.9118
2024-02-25 12:25:35,614 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-02-25 12:25:38,012 - mmcls - INFO - Epoch(val) [36][3]	accuracy_top-1: 52.2059, accuracy_top-5: 91.9118
2024-02-25 12:25:47,430 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-02-25 12:25:49,842 - mmcls - INFO - Epoch(val) [37][3]	accuracy_top-1: 55.1471, accuracy_top-5: 91.9118
2024-02-25 12:25:58,843 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-02-25 12:26:01,209 - mmcls - INFO - Epoch(val) [38][3]	accuracy_top-1: 54.4118, accuracy_top-5: 91.9118
2024-02-25 12:26:10,456 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-02-25 12:26:12,675 - mmcls - INFO - Epoch(val) [39][3]	accuracy_top-1: 53.6765, accuracy_top-5: 91.9118
2024-02-25 12:26:21,968 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-02-25 12:26:24,315 - mmcls - INFO - Epoch(val) [40][3]	accuracy_top-1: 55.8824, accuracy_top-5: 91.9118
2024-02-25 12:26:33,902 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-02-25 12:26:36,263 - mmcls - INFO - Epoch(val) [41][3]	accuracy_top-1: 56.6176, accuracy_top-5: 91.9118
2024-02-25 12:26:45,671 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-02-25 12:26:47,971 - mmcls - INFO - Epoch(val) [42][3]	accuracy_top-1: 55.8824, accuracy_top-5: 91.9118
2024-02-25 12:26:57,201 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-02-25 12:26:59,511 - mmcls - INFO - Epoch(val) [43][3]	accuracy_top-1: 53.6765, accuracy_top-5: 93.3824
2024-02-25 12:27:08,946 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-02-25 12:27:11,299 - mmcls - INFO - Epoch(val) [44][3]	accuracy_top-1: 54.4118, accuracy_top-5: 91.9118
2024-02-25 12:27:20,160 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-02-25 12:27:22,532 - mmcls - INFO - Epoch(val) [45][3]	accuracy_top-1: 55.1471, accuracy_top-5: 91.9118
2024-02-25 12:27:31,498 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-02-25 12:27:33,942 - mmcls - INFO - Epoch(val) [46][3]	accuracy_top-1: 56.6176, accuracy_top-5: 91.9118
2024-02-25 12:27:43,303 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-02-25 12:27:45,646 - mmcls - INFO - Epoch(val) [47][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:27:54,490 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-02-25 12:27:56,954 - mmcls - INFO - Epoch(val) [48][3]	accuracy_top-1: 57.3529, accuracy_top-5: 92.6471
2024-02-25 12:28:05,741 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-02-25 12:28:08,037 - mmcls - INFO - Epoch(val) [49][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:28:17,111 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-02-25 12:28:19,429 - mmcls - INFO - Epoch(val) [50][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.9118
2024-02-25 12:28:28,431 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-02-25 12:28:30,930 - mmcls - INFO - Epoch(val) [51][3]	accuracy_top-1: 53.6765, accuracy_top-5: 93.3824
2024-02-25 12:28:40,041 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-02-25 12:28:42,372 - mmcls - INFO - Epoch(val) [52][3]	accuracy_top-1: 55.1471, accuracy_top-5: 91.1765
2024-02-25 12:28:51,998 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-02-25 12:28:54,258 - mmcls - INFO - Epoch(val) [53][3]	accuracy_top-1: 55.1471, accuracy_top-5: 92.6471
2024-02-25 12:29:03,329 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-02-25 12:29:05,655 - mmcls - INFO - Epoch(val) [54][3]	accuracy_top-1: 55.8824, accuracy_top-5: 91.1765
2024-02-25 12:29:14,647 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-02-25 12:29:17,244 - mmcls - INFO - Epoch(val) [55][3]	accuracy_top-1: 57.3529, accuracy_top-5: 92.6471
2024-02-25 12:29:26,203 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-02-25 12:29:28,576 - mmcls - INFO - Epoch(val) [56][3]	accuracy_top-1: 60.2941, accuracy_top-5: 91.1765
2024-02-25 12:29:38,502 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-02-25 12:29:40,837 - mmcls - INFO - Epoch(val) [57][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.9118
2024-02-25 12:29:50,166 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-02-25 12:29:52,533 - mmcls - INFO - Epoch(val) [58][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.1765
2024-02-25 12:30:01,398 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-02-25 12:30:03,956 - mmcls - INFO - Epoch(val) [59][3]	accuracy_top-1: 58.0882, accuracy_top-5: 92.6471
2024-02-25 12:30:13,430 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-02-25 12:30:15,798 - mmcls - INFO - Epoch(val) [60][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.1765
2024-02-25 12:30:24,669 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-02-25 12:30:26,993 - mmcls - INFO - Epoch(val) [61][3]	accuracy_top-1: 58.0882, accuracy_top-5: 90.4412
2024-02-25 12:30:35,807 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-02-25 12:30:38,069 - mmcls - INFO - Epoch(val) [62][3]	accuracy_top-1: 59.5588, accuracy_top-5: 91.9118
2024-02-25 12:30:46,844 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-02-25 12:30:49,493 - mmcls - INFO - Epoch(val) [63][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:30:58,986 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-02-25 12:31:01,251 - mmcls - INFO - Epoch(val) [64][3]	accuracy_top-1: 57.3529, accuracy_top-5: 93.3824
2024-02-25 12:31:10,292 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-02-25 12:31:12,670 - mmcls - INFO - Epoch(val) [65][3]	accuracy_top-1: 57.3529, accuracy_top-5: 91.9118
2024-02-25 12:31:21,679 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-02-25 12:31:23,938 - mmcls - INFO - Epoch(val) [66][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:31:32,855 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-02-25 12:31:35,197 - mmcls - INFO - Epoch(val) [67][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:31:44,100 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-02-25 12:31:46,419 - mmcls - INFO - Epoch(val) [68][3]	accuracy_top-1: 60.2941, accuracy_top-5: 91.9118
2024-02-25 12:31:55,354 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-02-25 12:31:57,568 - mmcls - INFO - Epoch(val) [69][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:32:06,580 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-02-25 12:32:08,836 - mmcls - INFO - Epoch(val) [70][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:32:18,143 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-02-25 12:32:20,286 - mmcls - INFO - Epoch(val) [71][3]	accuracy_top-1: 58.8235, accuracy_top-5: 91.9118
2024-02-25 12:32:29,506 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-02-25 12:32:31,827 - mmcls - INFO - Epoch(val) [72][3]	accuracy_top-1: 63.2353, accuracy_top-5: 91.9118
2024-02-25 12:32:40,707 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-02-25 12:32:43,134 - mmcls - INFO - Epoch(val) [73][3]	accuracy_top-1: 61.0294, accuracy_top-5: 90.4412
2024-02-25 12:32:52,033 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-02-25 12:32:54,411 - mmcls - INFO - Epoch(val) [74][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:33:03,878 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-02-25 12:33:06,324 - mmcls - INFO - Epoch(val) [75][3]	accuracy_top-1: 57.3529, accuracy_top-5: 92.6471
2024-02-25 12:33:15,429 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-02-25 12:33:17,811 - mmcls - INFO - Epoch(val) [76][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:33:26,695 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-02-25 12:33:29,123 - mmcls - INFO - Epoch(val) [77][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.9118
2024-02-25 12:33:38,196 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-02-25 12:33:40,560 - mmcls - INFO - Epoch(val) [78][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:33:49,222 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-02-25 12:33:51,649 - mmcls - INFO - Epoch(val) [79][3]	accuracy_top-1: 58.0882, accuracy_top-5: 92.6471
2024-02-25 12:34:00,411 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-02-25 12:34:02,791 - mmcls - INFO - Epoch(val) [80][3]	accuracy_top-1: 58.8235, accuracy_top-5: 91.9118
2024-02-25 12:34:11,447 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-02-25 12:34:13,788 - mmcls - INFO - Epoch(val) [81][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:34:22,775 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-02-25 12:34:25,237 - mmcls - INFO - Epoch(val) [82][3]	accuracy_top-1: 58.8235, accuracy_top-5: 91.1765
2024-02-25 12:34:34,065 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-02-25 12:34:36,169 - mmcls - INFO - Epoch(val) [83][3]	accuracy_top-1: 60.2941, accuracy_top-5: 91.1765
2024-02-25 12:34:44,839 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-02-25 12:34:47,131 - mmcls - INFO - Epoch(val) [84][3]	accuracy_top-1: 57.3529, accuracy_top-5: 91.1765
2024-02-25 12:34:56,656 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-02-25 12:34:59,076 - mmcls - INFO - Epoch(val) [85][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:35:08,016 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-02-25 12:35:10,394 - mmcls - INFO - Epoch(val) [86][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:35:19,301 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-02-25 12:35:21,712 - mmcls - INFO - Epoch(val) [87][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:35:30,834 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-02-25 12:35:33,244 - mmcls - INFO - Epoch(val) [88][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:35:41,958 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-02-25 12:35:44,215 - mmcls - INFO - Epoch(val) [89][3]	accuracy_top-1: 58.0882, accuracy_top-5: 92.6471
2024-02-25 12:35:52,925 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-02-25 12:35:55,254 - mmcls - INFO - Epoch(val) [90][3]	accuracy_top-1: 51.4706, accuracy_top-5: 91.9118
2024-02-25 12:36:04,301 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-02-25 12:36:06,644 - mmcls - INFO - Epoch(val) [91][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:36:15,682 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-02-25 12:36:17,979 - mmcls - INFO - Epoch(val) [92][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:36:27,135 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-02-25 12:36:29,389 - mmcls - INFO - Epoch(val) [93][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:36:38,795 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-02-25 12:36:41,104 - mmcls - INFO - Epoch(val) [94][3]	accuracy_top-1: 58.0882, accuracy_top-5: 90.4412
2024-02-25 12:36:50,261 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-02-25 12:36:52,574 - mmcls - INFO - Epoch(val) [95][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:37:01,850 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-02-25 12:37:04,164 - mmcls - INFO - Epoch(val) [96][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:37:13,055 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-02-25 12:37:15,466 - mmcls - INFO - Epoch(val) [97][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:37:24,316 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-02-25 12:37:26,629 - mmcls - INFO - Epoch(val) [98][3]	accuracy_top-1: 58.8235, accuracy_top-5: 91.1765
2024-02-25 12:37:35,339 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-02-25 12:37:37,764 - mmcls - INFO - Epoch(val) [99][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:37:46,634 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-02-25 12:37:48,990 - mmcls - INFO - Epoch(val) [100][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:37:57,995 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-02-25 12:38:00,574 - mmcls - INFO - Epoch(val) [101][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:38:09,767 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-02-25 12:38:12,094 - mmcls - INFO - Epoch(val) [102][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:38:20,759 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-02-25 12:38:23,091 - mmcls - INFO - Epoch(val) [103][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:38:31,712 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-02-25 12:38:34,215 - mmcls - INFO - Epoch(val) [104][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:38:42,958 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-02-25 12:38:45,255 - mmcls - INFO - Epoch(val) [105][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:38:53,994 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-02-25 12:38:56,401 - mmcls - INFO - Epoch(val) [106][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:39:05,144 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-02-25 12:39:07,387 - mmcls - INFO - Epoch(val) [107][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:39:16,469 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-02-25 12:39:19,002 - mmcls - INFO - Epoch(val) [108][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:39:28,050 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-02-25 12:39:30,534 - mmcls - INFO - Epoch(val) [109][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:39:39,404 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-02-25 12:39:41,746 - mmcls - INFO - Epoch(val) [110][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:39:50,780 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-02-25 12:39:53,248 - mmcls - INFO - Epoch(val) [111][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:40:02,210 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-02-25 12:40:04,513 - mmcls - INFO - Epoch(val) [112][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:40:13,463 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-02-25 12:40:15,681 - mmcls - INFO - Epoch(val) [113][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:40:25,072 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-02-25 12:40:27,436 - mmcls - INFO - Epoch(val) [114][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:40:36,074 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-02-25 12:40:38,404 - mmcls - INFO - Epoch(val) [115][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:40:47,409 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-02-25 12:40:49,543 - mmcls - INFO - Epoch(val) [116][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:40:58,246 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-02-25 12:41:00,574 - mmcls - INFO - Epoch(val) [117][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:41:09,461 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-02-25 12:41:11,908 - mmcls - INFO - Epoch(val) [118][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:41:21,274 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-02-25 12:41:23,604 - mmcls - INFO - Epoch(val) [119][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:41:32,502 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-02-25 12:41:34,777 - mmcls - INFO - Epoch(val) [120][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:41:43,519 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-02-25 12:41:45,740 - mmcls - INFO - Epoch(val) [121][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:41:54,900 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-02-25 12:41:57,186 - mmcls - INFO - Epoch(val) [122][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:42:05,913 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-02-25 12:42:08,372 - mmcls - INFO - Epoch(val) [123][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:42:17,747 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-02-25 12:42:20,198 - mmcls - INFO - Epoch(val) [124][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:42:29,746 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-02-25 12:42:32,067 - mmcls - INFO - Epoch(val) [125][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:42:41,465 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-02-25 12:42:43,761 - mmcls - INFO - Epoch(val) [126][3]	accuracy_top-1: 58.8235, accuracy_top-5: 92.6471
2024-02-25 12:42:53,072 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-02-25 12:42:55,463 - mmcls - INFO - Epoch(val) [127][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:43:04,938 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-02-25 12:43:07,356 - mmcls - INFO - Epoch(val) [128][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:43:16,239 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-02-25 12:43:18,540 - mmcls - INFO - Epoch(val) [129][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:43:27,414 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-02-25 12:43:29,477 - mmcls - INFO - Epoch(val) [130][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:43:38,273 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-02-25 12:43:40,641 - mmcls - INFO - Epoch(val) [131][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:43:49,433 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-02-25 12:43:51,664 - mmcls - INFO - Epoch(val) [132][3]	accuracy_top-1: 62.5000, accuracy_top-5: 92.6471
2024-02-25 12:44:00,346 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-02-25 12:44:02,613 - mmcls - INFO - Epoch(val) [133][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:44:11,523 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-02-25 12:44:13,916 - mmcls - INFO - Epoch(val) [134][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:44:22,672 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-02-25 12:44:25,030 - mmcls - INFO - Epoch(val) [135][3]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 12:44:33,786 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-02-25 12:44:36,190 - mmcls - INFO - Epoch(val) [136][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:44:45,228 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-02-25 12:44:47,559 - mmcls - INFO - Epoch(val) [137][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:44:56,468 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-02-25 12:44:58,690 - mmcls - INFO - Epoch(val) [138][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:45:07,388 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-02-25 12:45:09,736 - mmcls - INFO - Epoch(val) [139][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:45:18,559 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-02-25 12:45:21,011 - mmcls - INFO - Epoch(val) [140][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:45:30,392 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-02-25 12:45:32,740 - mmcls - INFO - Epoch(val) [141][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:45:41,820 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-02-25 12:45:43,912 - mmcls - INFO - Epoch(val) [142][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:45:52,830 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-02-25 12:45:55,188 - mmcls - INFO - Epoch(val) [143][3]	accuracy_top-1: 58.0882, accuracy_top-5: 93.3824
2024-02-25 12:46:04,379 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-02-25 12:46:06,800 - mmcls - INFO - Epoch(val) [144][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:46:16,142 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-02-25 12:46:18,750 - mmcls - INFO - Epoch(val) [145][3]	accuracy_top-1: 62.5000, accuracy_top-5: 92.6471
2024-02-25 12:46:27,750 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-02-25 12:46:30,198 - mmcls - INFO - Epoch(val) [146][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:46:39,132 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-02-25 12:46:41,423 - mmcls - INFO - Epoch(val) [147][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:46:50,227 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-02-25 12:46:52,567 - mmcls - INFO - Epoch(val) [148][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:47:01,833 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-02-25 12:47:04,281 - mmcls - INFO - Epoch(val) [149][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:47:13,664 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-02-25 12:47:16,218 - mmcls - INFO - Epoch(val) [150][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:47:25,256 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-02-25 12:47:27,603 - mmcls - INFO - Epoch(val) [151][3]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 12:47:36,938 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-02-25 12:47:39,253 - mmcls - INFO - Epoch(val) [152][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:47:48,485 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-02-25 12:47:50,899 - mmcls - INFO - Epoch(val) [153][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:48:00,073 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-02-25 12:48:02,373 - mmcls - INFO - Epoch(val) [154][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:48:11,455 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-02-25 12:48:13,800 - mmcls - INFO - Epoch(val) [155][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:48:23,015 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-02-25 12:48:25,178 - mmcls - INFO - Epoch(val) [156][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:48:34,531 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-02-25 12:48:36,888 - mmcls - INFO - Epoch(val) [157][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:48:45,820 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-02-25 12:48:48,280 - mmcls - INFO - Epoch(val) [158][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:48:57,330 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-02-25 12:48:59,586 - mmcls - INFO - Epoch(val) [159][3]	accuracy_top-1: 59.5588, accuracy_top-5: 93.3824
2024-02-25 12:49:08,622 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-02-25 12:49:11,005 - mmcls - INFO - Epoch(val) [160][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:49:19,851 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-02-25 12:49:22,178 - mmcls - INFO - Epoch(val) [161][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:49:31,354 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-02-25 12:49:33,482 - mmcls - INFO - Epoch(val) [162][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:49:42,221 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-02-25 12:49:44,618 - mmcls - INFO - Epoch(val) [163][3]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 12:49:54,173 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-02-25 12:49:56,781 - mmcls - INFO - Epoch(val) [164][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:50:05,446 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-02-25 12:50:07,804 - mmcls - INFO - Epoch(val) [165][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:50:16,482 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-02-25 12:50:18,634 - mmcls - INFO - Epoch(val) [166][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:50:27,632 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-02-25 12:50:29,861 - mmcls - INFO - Epoch(val) [167][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:50:38,786 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-02-25 12:50:41,181 - mmcls - INFO - Epoch(val) [168][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:50:50,608 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-02-25 12:50:52,967 - mmcls - INFO - Epoch(val) [169][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:51:01,823 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-02-25 12:51:04,101 - mmcls - INFO - Epoch(val) [170][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:51:13,316 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-02-25 12:51:15,554 - mmcls - INFO - Epoch(val) [171][3]	accuracy_top-1: 59.5588, accuracy_top-5: 93.3824
2024-02-25 12:51:24,618 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-02-25 12:51:26,996 - mmcls - INFO - Epoch(val) [172][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:51:35,826 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-02-25 12:51:38,297 - mmcls - INFO - Epoch(val) [173][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:51:47,102 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-02-25 12:51:49,523 - mmcls - INFO - Epoch(val) [174][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:51:58,268 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-02-25 12:52:00,638 - mmcls - INFO - Epoch(val) [175][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:52:09,439 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-02-25 12:52:12,060 - mmcls - INFO - Epoch(val) [176][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:52:20,735 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-02-25 12:52:22,989 - mmcls - INFO - Epoch(val) [177][3]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 12:52:31,972 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-02-25 12:52:34,248 - mmcls - INFO - Epoch(val) [178][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:52:43,323 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-02-25 12:52:45,613 - mmcls - INFO - Epoch(val) [179][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:52:55,169 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-02-25 12:52:57,486 - mmcls - INFO - Epoch(val) [180][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:53:06,588 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-02-25 12:53:09,225 - mmcls - INFO - Epoch(val) [181][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:53:18,218 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-02-25 12:53:20,483 - mmcls - INFO - Epoch(val) [182][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:53:29,484 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-02-25 12:53:31,735 - mmcls - INFO - Epoch(val) [183][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:53:41,093 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-02-25 12:53:43,439 - mmcls - INFO - Epoch(val) [184][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:53:52,347 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-02-25 12:53:54,517 - mmcls - INFO - Epoch(val) [185][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 12:54:03,528 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-02-25 12:54:05,889 - mmcls - INFO - Epoch(val) [186][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:54:14,837 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-02-25 12:54:17,333 - mmcls - INFO - Epoch(val) [187][3]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 12:54:26,539 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-02-25 12:54:28,819 - mmcls - INFO - Epoch(val) [188][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:54:37,786 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-02-25 12:54:40,062 - mmcls - INFO - Epoch(val) [189][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:54:48,887 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-02-25 12:54:51,320 - mmcls - INFO - Epoch(val) [190][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:55:00,345 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-02-25 12:55:02,671 - mmcls - INFO - Epoch(val) [191][3]	accuracy_top-1: 61.7647, accuracy_top-5: 93.3824
2024-02-25 12:55:11,451 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-02-25 12:55:13,740 - mmcls - INFO - Epoch(val) [192][3]	accuracy_top-1: 59.5588, accuracy_top-5: 93.3824
2024-02-25 12:55:22,711 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-02-25 12:55:25,093 - mmcls - INFO - Epoch(val) [193][3]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 12:55:34,023 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-02-25 12:55:36,506 - mmcls - INFO - Epoch(val) [194][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:55:45,661 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-02-25 12:55:47,966 - mmcls - INFO - Epoch(val) [195][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:55:56,874 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-02-25 12:55:59,247 - mmcls - INFO - Epoch(val) [196][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 12:56:08,125 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-02-25 12:56:10,412 - mmcls - INFO - Epoch(val) [197][3]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 12:56:19,362 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-02-25 12:56:21,704 - mmcls - INFO - Epoch(val) [198][3]	accuracy_top-1: 58.8235, accuracy_top-5: 91.9118
2024-02-25 12:56:30,660 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-02-25 12:56:33,008 - mmcls - INFO - Epoch(val) [199][3]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 12:56:42,076 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-02-25 12:56:44,210 - mmcls - INFO - Epoch(val) [200][3]	accuracy_top-1: 59.5588, accuracy_top-5: 93.3824
