2024-02-26 01:37:25,930 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+35d7618
------------------------------------------------------------

2024-02-26 01:37:25,932 - mmcls - INFO - Distributed training: False
2024-02-26 01:37:26,130 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=64,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/test',
        ann_file='data/flowers/meta/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_flowers_bs64_lr0.1'
gpu_ids = range(0, 1)

2024-02-26 01:37:26,399 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-02-26 01:37:26,704 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-02-26 01:37:30,176 - mmcls - INFO - Start running, host: cshtimmy@gpu2-comp-204, work_dir: /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs64_lr0.1
2024-02-26 01:37:30,177 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-02-26 01:37:30,177 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-02-26 01:37:30,177 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs64_lr0.1 by HardDiskBackend.
2024-02-26 01:37:42,122 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-02-26 01:37:45,062 - mmcls - INFO - Epoch(val) [1][3]	accuracy_top-1: 27.9412, accuracy_top-5: 72.0588
2024-02-26 01:37:54,272 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-02-26 01:37:56,512 - mmcls - INFO - Epoch(val) [2][3]	accuracy_top-1: 30.1471, accuracy_top-5: 76.4706
2024-02-26 01:38:05,779 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-02-26 01:38:07,810 - mmcls - INFO - Epoch(val) [3][3]	accuracy_top-1: 37.5000, accuracy_top-5: 80.8824
2024-02-26 01:38:17,135 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-02-26 01:38:19,679 - mmcls - INFO - Epoch(val) [4][3]	accuracy_top-1: 29.4118, accuracy_top-5: 86.7647
2024-02-26 01:38:28,770 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-02-26 01:38:31,322 - mmcls - INFO - Epoch(val) [5][3]	accuracy_top-1: 47.0588, accuracy_top-5: 90.4412
2024-02-26 01:38:40,481 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-02-26 01:38:42,954 - mmcls - INFO - Epoch(val) [6][3]	accuracy_top-1: 48.5294, accuracy_top-5: 89.7059
2024-02-26 01:38:52,023 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-02-26 01:38:54,499 - mmcls - INFO - Epoch(val) [7][3]	accuracy_top-1: 49.2647, accuracy_top-5: 91.1765
2024-02-26 01:39:03,545 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-02-26 01:39:05,915 - mmcls - INFO - Epoch(val) [8][3]	accuracy_top-1: 47.7941, accuracy_top-5: 91.9118
2024-02-26 01:39:15,048 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-02-26 01:39:17,651 - mmcls - INFO - Epoch(val) [9][3]	accuracy_top-1: 47.7941, accuracy_top-5: 93.3824
2024-02-26 01:39:26,709 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-02-26 01:39:29,299 - mmcls - INFO - Epoch(val) [10][3]	accuracy_top-1: 55.1471, accuracy_top-5: 93.3824
2024-02-26 01:39:38,375 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-02-26 01:39:40,887 - mmcls - INFO - Epoch(val) [11][3]	accuracy_top-1: 49.2647, accuracy_top-5: 91.9118
2024-02-26 01:39:50,352 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-02-26 01:39:52,786 - mmcls - INFO - Epoch(val) [12][3]	accuracy_top-1: 46.3235, accuracy_top-5: 91.9118
2024-02-26 01:40:01,855 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-02-26 01:40:04,199 - mmcls - INFO - Epoch(val) [13][3]	accuracy_top-1: 56.6176, accuracy_top-5: 96.3235
2024-02-26 01:40:13,295 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-02-26 01:40:15,642 - mmcls - INFO - Epoch(val) [14][3]	accuracy_top-1: 61.7647, accuracy_top-5: 94.8529
2024-02-26 01:40:24,963 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-02-26 01:40:27,378 - mmcls - INFO - Epoch(val) [15][3]	accuracy_top-1: 55.8824, accuracy_top-5: 94.8529
2024-02-26 01:40:36,380 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-02-26 01:40:38,800 - mmcls - INFO - Epoch(val) [16][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-26 01:40:47,565 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-02-26 01:40:50,120 - mmcls - INFO - Epoch(val) [17][3]	accuracy_top-1: 63.9706, accuracy_top-5: 96.3235
2024-02-26 01:40:59,155 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-02-26 01:41:01,469 - mmcls - INFO - Epoch(val) [18][3]	accuracy_top-1: 58.8235, accuracy_top-5: 91.1765
2024-02-26 01:41:10,331 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-02-26 01:41:12,814 - mmcls - INFO - Epoch(val) [19][3]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-26 01:41:21,642 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-02-26 01:41:24,134 - mmcls - INFO - Epoch(val) [20][3]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-26 01:41:33,460 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-02-26 01:41:35,917 - mmcls - INFO - Epoch(val) [21][3]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-26 01:41:45,083 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-02-26 01:41:47,465 - mmcls - INFO - Epoch(val) [22][3]	accuracy_top-1: 65.4412, accuracy_top-5: 94.1176
2024-02-26 01:41:56,611 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-02-26 01:41:59,003 - mmcls - INFO - Epoch(val) [23][3]	accuracy_top-1: 70.5882, accuracy_top-5: 97.0588
2024-02-26 01:42:07,937 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-02-26 01:42:10,366 - mmcls - INFO - Epoch(val) [24][3]	accuracy_top-1: 65.4412, accuracy_top-5: 95.5882
2024-02-26 01:42:19,371 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-02-26 01:42:21,933 - mmcls - INFO - Epoch(val) [25][3]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-26 01:42:30,998 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-02-26 01:42:33,600 - mmcls - INFO - Epoch(val) [26][3]	accuracy_top-1: 69.8529, accuracy_top-5: 97.0588
2024-02-26 01:42:42,745 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-02-26 01:42:45,330 - mmcls - INFO - Epoch(val) [27][3]	accuracy_top-1: 75.0000, accuracy_top-5: 94.8529
2024-02-26 01:42:54,592 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-02-26 01:42:57,228 - mmcls - INFO - Epoch(val) [28][3]	accuracy_top-1: 64.7059, accuracy_top-5: 97.0588
2024-02-26 01:43:06,458 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-02-26 01:43:08,888 - mmcls - INFO - Epoch(val) [29][3]	accuracy_top-1: 71.3235, accuracy_top-5: 94.1176
2024-02-26 01:43:18,254 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-02-26 01:43:20,584 - mmcls - INFO - Epoch(val) [30][3]	accuracy_top-1: 72.0588, accuracy_top-5: 95.5882
2024-02-26 01:43:29,744 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-02-26 01:43:32,238 - mmcls - INFO - Epoch(val) [31][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.1765
2024-02-26 01:43:41,554 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-02-26 01:43:43,985 - mmcls - INFO - Epoch(val) [32][3]	accuracy_top-1: 75.0000, accuracy_top-5: 96.3235
2024-02-26 01:43:53,283 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-02-26 01:43:55,734 - mmcls - INFO - Epoch(val) [33][3]	accuracy_top-1: 68.3824, accuracy_top-5: 96.3235
2024-02-26 01:44:04,835 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-02-26 01:44:07,321 - mmcls - INFO - Epoch(val) [34][3]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-26 01:44:16,449 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-02-26 01:44:18,853 - mmcls - INFO - Epoch(val) [35][3]	accuracy_top-1: 79.4118, accuracy_top-5: 96.3235
2024-02-26 01:44:28,066 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-02-26 01:44:30,487 - mmcls - INFO - Epoch(val) [36][3]	accuracy_top-1: 69.1176, accuracy_top-5: 95.5882
2024-02-26 01:44:39,594 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-02-26 01:44:42,050 - mmcls - INFO - Epoch(val) [37][3]	accuracy_top-1: 76.4706, accuracy_top-5: 95.5882
2024-02-26 01:44:51,031 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-02-26 01:44:53,258 - mmcls - INFO - Epoch(val) [38][3]	accuracy_top-1: 70.5882, accuracy_top-5: 97.7941
2024-02-26 01:45:02,122 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-02-26 01:45:04,507 - mmcls - INFO - Epoch(val) [39][3]	accuracy_top-1: 75.0000, accuracy_top-5: 97.0588
2024-02-26 01:45:13,777 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-02-26 01:45:16,277 - mmcls - INFO - Epoch(val) [40][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.7941
2024-02-26 01:45:25,387 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-02-26 01:45:27,685 - mmcls - INFO - Epoch(val) [41][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-26 01:45:36,638 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-02-26 01:45:39,064 - mmcls - INFO - Epoch(val) [42][3]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-26 01:45:48,291 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-02-26 01:45:50,878 - mmcls - INFO - Epoch(val) [43][3]	accuracy_top-1: 67.6471, accuracy_top-5: 96.3235
2024-02-26 01:46:00,561 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-02-26 01:46:03,163 - mmcls - INFO - Epoch(val) [44][3]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-26 01:46:12,204 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-02-26 01:46:14,759 - mmcls - INFO - Epoch(val) [45][3]	accuracy_top-1: 70.5882, accuracy_top-5: 98.5294
2024-02-26 01:46:23,659 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-02-26 01:46:26,325 - mmcls - INFO - Epoch(val) [46][3]	accuracy_top-1: 75.0000, accuracy_top-5: 98.5294
2024-02-26 01:46:35,219 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-02-26 01:46:37,642 - mmcls - INFO - Epoch(val) [47][3]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-26 01:46:46,534 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-02-26 01:46:49,085 - mmcls - INFO - Epoch(val) [48][3]	accuracy_top-1: 68.3824, accuracy_top-5: 99.2647
2024-02-26 01:46:58,147 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-02-26 01:47:00,497 - mmcls - INFO - Epoch(val) [49][3]	accuracy_top-1: 75.0000, accuracy_top-5: 97.0588
2024-02-26 01:47:09,101 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-02-26 01:47:11,568 - mmcls - INFO - Epoch(val) [50][3]	accuracy_top-1: 76.4706, accuracy_top-5: 94.8529
2024-02-26 01:47:20,567 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-02-26 01:47:23,028 - mmcls - INFO - Epoch(val) [51][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-26 01:47:31,924 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-02-26 01:47:34,265 - mmcls - INFO - Epoch(val) [52][3]	accuracy_top-1: 75.0000, accuracy_top-5: 95.5882
2024-02-26 01:47:44,342 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-02-26 01:47:46,769 - mmcls - INFO - Epoch(val) [53][3]	accuracy_top-1: 73.5294, accuracy_top-5: 97.7941
2024-02-26 01:47:55,767 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-02-26 01:47:58,260 - mmcls - INFO - Epoch(val) [54][3]	accuracy_top-1: 72.0588, accuracy_top-5: 97.0588
2024-02-26 01:48:07,895 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-02-26 01:48:10,364 - mmcls - INFO - Epoch(val) [55][3]	accuracy_top-1: 77.9412, accuracy_top-5: 96.3235
2024-02-26 01:48:19,332 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-02-26 01:48:21,942 - mmcls - INFO - Epoch(val) [56][3]	accuracy_top-1: 72.0588, accuracy_top-5: 95.5882
2024-02-26 01:48:31,657 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-02-26 01:48:34,182 - mmcls - INFO - Epoch(val) [57][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-26 01:48:43,740 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-02-26 01:48:46,249 - mmcls - INFO - Epoch(val) [58][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.0588
2024-02-26 01:48:55,263 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-02-26 01:48:57,964 - mmcls - INFO - Epoch(val) [59][3]	accuracy_top-1: 80.1471, accuracy_top-5: 96.3235
2024-02-26 01:49:06,960 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-02-26 01:49:09,421 - mmcls - INFO - Epoch(val) [60][3]	accuracy_top-1: 72.7941, accuracy_top-5: 96.3235
2024-02-26 01:49:18,432 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-02-26 01:49:20,881 - mmcls - INFO - Epoch(val) [61][3]	accuracy_top-1: 70.5882, accuracy_top-5: 98.5294
2024-02-26 01:49:30,118 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-02-26 01:49:32,589 - mmcls - INFO - Epoch(val) [62][3]	accuracy_top-1: 75.0000, accuracy_top-5: 99.2647
2024-02-26 01:49:41,416 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-02-26 01:49:43,878 - mmcls - INFO - Epoch(val) [63][3]	accuracy_top-1: 79.4118, accuracy_top-5: 98.5294
2024-02-26 01:49:53,135 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-02-26 01:49:55,628 - mmcls - INFO - Epoch(val) [64][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.7941
2024-02-26 01:50:04,770 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-02-26 01:50:07,132 - mmcls - INFO - Epoch(val) [65][3]	accuracy_top-1: 73.5294, accuracy_top-5: 94.8529
2024-02-26 01:50:16,104 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-02-26 01:50:18,632 - mmcls - INFO - Epoch(val) [66][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-26 01:50:28,022 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-02-26 01:50:30,600 - mmcls - INFO - Epoch(val) [67][3]	accuracy_top-1: 78.6765, accuracy_top-5: 96.3235
2024-02-26 01:50:40,259 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-02-26 01:50:42,680 - mmcls - INFO - Epoch(val) [68][3]	accuracy_top-1: 82.3529, accuracy_top-5: 99.2647
2024-02-26 01:50:52,545 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-02-26 01:50:55,018 - mmcls - INFO - Epoch(val) [69][3]	accuracy_top-1: 82.3529, accuracy_top-5: 99.2647
2024-02-26 01:51:03,931 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-02-26 01:51:06,368 - mmcls - INFO - Epoch(val) [70][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-26 01:51:16,098 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-02-26 01:51:18,464 - mmcls - INFO - Epoch(val) [71][3]	accuracy_top-1: 76.4706, accuracy_top-5: 96.3235
2024-02-26 01:51:27,868 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-02-26 01:51:30,449 - mmcls - INFO - Epoch(val) [72][3]	accuracy_top-1: 72.7941, accuracy_top-5: 96.3235
2024-02-26 01:51:39,291 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-02-26 01:51:41,692 - mmcls - INFO - Epoch(val) [73][3]	accuracy_top-1: 72.7941, accuracy_top-5: 95.5882
2024-02-26 01:51:50,440 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-02-26 01:51:52,912 - mmcls - INFO - Epoch(val) [74][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-26 01:52:02,128 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-02-26 01:52:04,684 - mmcls - INFO - Epoch(val) [75][3]	accuracy_top-1: 80.8824, accuracy_top-5: 97.0588
2024-02-26 01:52:13,965 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-02-26 01:52:16,473 - mmcls - INFO - Epoch(val) [76][3]	accuracy_top-1: 81.6176, accuracy_top-5: 97.7941
2024-02-26 01:52:25,388 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-02-26 01:52:27,884 - mmcls - INFO - Epoch(val) [77][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-26 01:52:37,115 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-02-26 01:52:39,683 - mmcls - INFO - Epoch(val) [78][3]	accuracy_top-1: 79.4118, accuracy_top-5: 99.2647
2024-02-26 01:52:48,723 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-02-26 01:52:51,401 - mmcls - INFO - Epoch(val) [79][3]	accuracy_top-1: 74.2647, accuracy_top-5: 97.7941
2024-02-26 01:53:00,477 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-02-26 01:53:02,935 - mmcls - INFO - Epoch(val) [80][3]	accuracy_top-1: 80.8824, accuracy_top-5: 99.2647
2024-02-26 01:53:12,260 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-02-26 01:53:14,835 - mmcls - INFO - Epoch(val) [81][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-26 01:53:23,754 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-02-26 01:53:26,212 - mmcls - INFO - Epoch(val) [82][3]	accuracy_top-1: 77.2059, accuracy_top-5: 96.3235
2024-02-26 01:53:35,457 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-02-26 01:53:37,934 - mmcls - INFO - Epoch(val) [83][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-26 01:53:46,541 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-02-26 01:53:48,839 - mmcls - INFO - Epoch(val) [84][3]	accuracy_top-1: 79.4118, accuracy_top-5: 99.2647
2024-02-26 01:53:57,433 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-02-26 01:53:59,673 - mmcls - INFO - Epoch(val) [85][3]	accuracy_top-1: 83.0882, accuracy_top-5: 99.2647
2024-02-26 01:54:08,625 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-02-26 01:54:11,167 - mmcls - INFO - Epoch(val) [86][3]	accuracy_top-1: 79.4118, accuracy_top-5: 98.5294
2024-02-26 01:54:20,232 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-02-26 01:54:22,706 - mmcls - INFO - Epoch(val) [87][3]	accuracy_top-1: 75.7353, accuracy_top-5: 97.7941
2024-02-26 01:54:31,769 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-02-26 01:54:34,250 - mmcls - INFO - Epoch(val) [88][3]	accuracy_top-1: 81.6176, accuracy_top-5: 98.5294
2024-02-26 01:54:42,975 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-02-26 01:54:44,962 - mmcls - INFO - Epoch(val) [89][3]	accuracy_top-1: 81.6176, accuracy_top-5: 98.5294
2024-02-26 01:54:53,692 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-02-26 01:54:56,150 - mmcls - INFO - Epoch(val) [90][3]	accuracy_top-1: 82.3529, accuracy_top-5: 99.2647
2024-02-26 01:55:05,608 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-02-26 01:55:08,095 - mmcls - INFO - Epoch(val) [91][3]	accuracy_top-1: 80.1471, accuracy_top-5: 98.5294
2024-02-26 01:55:17,247 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-02-26 01:55:19,678 - mmcls - INFO - Epoch(val) [92][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-26 01:55:28,537 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-02-26 01:55:30,938 - mmcls - INFO - Epoch(val) [93][3]	accuracy_top-1: 77.9412, accuracy_top-5: 98.5294
2024-02-26 01:55:39,860 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-02-26 01:55:42,409 - mmcls - INFO - Epoch(val) [94][3]	accuracy_top-1: 72.0588, accuracy_top-5: 94.8529
2024-02-26 01:55:51,812 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-02-26 01:55:54,255 - mmcls - INFO - Epoch(val) [95][3]	accuracy_top-1: 80.1471, accuracy_top-5: 98.5294
2024-02-26 01:56:03,867 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-02-26 01:56:06,317 - mmcls - INFO - Epoch(val) [96][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-26 01:56:15,678 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-02-26 01:56:18,102 - mmcls - INFO - Epoch(val) [97][3]	accuracy_top-1: 83.0882, accuracy_top-5: 100.0000
2024-02-26 01:56:27,305 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-02-26 01:56:29,754 - mmcls - INFO - Epoch(val) [98][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-26 01:56:38,811 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-02-26 01:56:41,224 - mmcls - INFO - Epoch(val) [99][3]	accuracy_top-1: 81.6176, accuracy_top-5: 99.2647
2024-02-26 01:56:50,066 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-02-26 01:56:52,579 - mmcls - INFO - Epoch(val) [100][3]	accuracy_top-1: 77.2059, accuracy_top-5: 99.2647
2024-02-26 01:57:01,736 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-02-26 01:57:04,333 - mmcls - INFO - Epoch(val) [101][3]	accuracy_top-1: 82.3529, accuracy_top-5: 100.0000
2024-02-26 01:57:13,169 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-02-26 01:57:15,596 - mmcls - INFO - Epoch(val) [102][3]	accuracy_top-1: 84.5588, accuracy_top-5: 100.0000
2024-02-26 01:57:24,711 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-02-26 01:57:27,128 - mmcls - INFO - Epoch(val) [103][3]	accuracy_top-1: 83.8235, accuracy_top-5: 100.0000
2024-02-26 01:57:36,695 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-02-26 01:57:39,107 - mmcls - INFO - Epoch(val) [104][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 01:57:48,311 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-02-26 01:57:50,803 - mmcls - INFO - Epoch(val) [105][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:57:59,940 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-02-26 01:58:02,536 - mmcls - INFO - Epoch(val) [106][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 01:58:11,580 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-02-26 01:58:13,735 - mmcls - INFO - Epoch(val) [107][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:58:23,052 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-02-26 01:58:25,495 - mmcls - INFO - Epoch(val) [108][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 01:58:34,523 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-02-26 01:58:36,963 - mmcls - INFO - Epoch(val) [109][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:58:46,248 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-02-26 01:58:48,637 - mmcls - INFO - Epoch(val) [110][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:58:57,693 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-02-26 01:59:00,121 - mmcls - INFO - Epoch(val) [111][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 01:59:08,977 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-02-26 01:59:11,458 - mmcls - INFO - Epoch(val) [112][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 01:59:21,128 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-02-26 01:59:23,709 - mmcls - INFO - Epoch(val) [113][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:59:32,901 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-02-26 01:59:35,358 - mmcls - INFO - Epoch(val) [114][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 01:59:44,461 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-02-26 01:59:46,907 - mmcls - INFO - Epoch(val) [115][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:59:56,196 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-02-26 01:59:58,856 - mmcls - INFO - Epoch(val) [116][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:00:07,683 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-02-26 02:00:10,164 - mmcls - INFO - Epoch(val) [117][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:00:18,873 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-02-26 02:00:21,425 - mmcls - INFO - Epoch(val) [118][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:00:30,572 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-02-26 02:00:33,203 - mmcls - INFO - Epoch(val) [119][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:00:42,204 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-02-26 02:00:44,696 - mmcls - INFO - Epoch(val) [120][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:00:53,683 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-02-26 02:00:55,991 - mmcls - INFO - Epoch(val) [121][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:01:05,363 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-02-26 02:01:07,685 - mmcls - INFO - Epoch(val) [122][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:01:16,847 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-02-26 02:01:19,164 - mmcls - INFO - Epoch(val) [123][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:01:28,420 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-02-26 02:01:30,865 - mmcls - INFO - Epoch(val) [124][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:01:40,194 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-02-26 02:01:42,614 - mmcls - INFO - Epoch(val) [125][3]	accuracy_top-1: 83.8235, accuracy_top-5: 99.2647
2024-02-26 02:01:51,672 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-02-26 02:01:54,250 - mmcls - INFO - Epoch(val) [126][3]	accuracy_top-1: 83.8235, accuracy_top-5: 99.2647
2024-02-26 02:02:03,614 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-02-26 02:02:06,069 - mmcls - INFO - Epoch(val) [127][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:02:15,003 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-02-26 02:02:17,329 - mmcls - INFO - Epoch(val) [128][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:02:26,600 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-02-26 02:02:28,975 - mmcls - INFO - Epoch(val) [129][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:02:38,415 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-02-26 02:02:41,379 - mmcls - INFO - Epoch(val) [130][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:02:50,439 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-02-26 02:02:52,875 - mmcls - INFO - Epoch(val) [131][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:03:01,933 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-02-26 02:03:04,300 - mmcls - INFO - Epoch(val) [132][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:03:13,678 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-02-26 02:03:16,063 - mmcls - INFO - Epoch(val) [133][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:03:25,191 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-02-26 02:03:27,604 - mmcls - INFO - Epoch(val) [134][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:03:37,016 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-02-26 02:03:39,498 - mmcls - INFO - Epoch(val) [135][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:03:48,627 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-02-26 02:03:51,391 - mmcls - INFO - Epoch(val) [136][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:04:00,360 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-02-26 02:04:02,782 - mmcls - INFO - Epoch(val) [137][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:04:12,088 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-02-26 02:04:14,488 - mmcls - INFO - Epoch(val) [138][3]	accuracy_top-1: 83.0882, accuracy_top-5: 99.2647
2024-02-26 02:04:23,895 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-02-26 02:04:26,404 - mmcls - INFO - Epoch(val) [139][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:04:35,153 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-02-26 02:04:37,489 - mmcls - INFO - Epoch(val) [140][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:04:46,803 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-02-26 02:04:49,080 - mmcls - INFO - Epoch(val) [141][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:04:58,184 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-02-26 02:05:00,653 - mmcls - INFO - Epoch(val) [142][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:05:09,751 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-02-26 02:05:12,139 - mmcls - INFO - Epoch(val) [143][3]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 02:05:21,113 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-02-26 02:05:23,493 - mmcls - INFO - Epoch(val) [144][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:05:32,623 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-02-26 02:05:34,984 - mmcls - INFO - Epoch(val) [145][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:05:44,181 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-02-26 02:05:46,542 - mmcls - INFO - Epoch(val) [146][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:05:55,468 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-02-26 02:05:57,960 - mmcls - INFO - Epoch(val) [147][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:06:06,911 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-02-26 02:06:09,414 - mmcls - INFO - Epoch(val) [148][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:06:18,397 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-02-26 02:06:20,730 - mmcls - INFO - Epoch(val) [149][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:06:29,620 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-02-26 02:06:32,186 - mmcls - INFO - Epoch(val) [150][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:06:41,291 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-02-26 02:06:43,875 - mmcls - INFO - Epoch(val) [151][3]	accuracy_top-1: 83.8235, accuracy_top-5: 99.2647
2024-02-26 02:06:52,855 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-02-26 02:06:55,405 - mmcls - INFO - Epoch(val) [152][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:07:04,668 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-02-26 02:07:07,104 - mmcls - INFO - Epoch(val) [153][3]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-26 02:07:16,009 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-02-26 02:07:18,727 - mmcls - INFO - Epoch(val) [154][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:07:27,765 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-02-26 02:07:30,139 - mmcls - INFO - Epoch(val) [155][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:07:39,317 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-02-26 02:07:41,830 - mmcls - INFO - Epoch(val) [156][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:07:51,032 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-02-26 02:07:53,598 - mmcls - INFO - Epoch(val) [157][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:08:02,863 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-02-26 02:08:05,289 - mmcls - INFO - Epoch(val) [158][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:08:14,649 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-02-26 02:08:17,116 - mmcls - INFO - Epoch(val) [159][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:08:26,307 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-02-26 02:08:28,971 - mmcls - INFO - Epoch(val) [160][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:08:38,241 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-02-26 02:08:40,673 - mmcls - INFO - Epoch(val) [161][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:08:50,104 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-02-26 02:08:52,480 - mmcls - INFO - Epoch(val) [162][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:09:01,692 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-02-26 02:09:04,147 - mmcls - INFO - Epoch(val) [163][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:09:13,366 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-02-26 02:09:15,823 - mmcls - INFO - Epoch(val) [164][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:09:24,999 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-02-26 02:09:27,714 - mmcls - INFO - Epoch(val) [165][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:09:36,686 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-02-26 02:09:39,176 - mmcls - INFO - Epoch(val) [166][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:09:48,491 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-02-26 02:09:51,108 - mmcls - INFO - Epoch(val) [167][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:10:00,516 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-02-26 02:10:03,052 - mmcls - INFO - Epoch(val) [168][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:10:12,261 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-02-26 02:10:14,881 - mmcls - INFO - Epoch(val) [169][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:10:24,025 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-02-26 02:10:26,467 - mmcls - INFO - Epoch(val) [170][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:10:36,132 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-02-26 02:10:38,658 - mmcls - INFO - Epoch(val) [171][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:10:47,701 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-02-26 02:10:50,320 - mmcls - INFO - Epoch(val) [172][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:10:59,195 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-02-26 02:11:01,550 - mmcls - INFO - Epoch(val) [173][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:11:10,732 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-02-26 02:11:13,124 - mmcls - INFO - Epoch(val) [174][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:11:22,024 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-02-26 02:11:24,502 - mmcls - INFO - Epoch(val) [175][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:11:33,299 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-02-26 02:11:35,842 - mmcls - INFO - Epoch(val) [176][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:11:44,898 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-02-26 02:11:47,337 - mmcls - INFO - Epoch(val) [177][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:11:56,271 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-02-26 02:11:58,710 - mmcls - INFO - Epoch(val) [178][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:12:07,906 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-02-26 02:12:10,299 - mmcls - INFO - Epoch(val) [179][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:12:19,594 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-02-26 02:12:22,100 - mmcls - INFO - Epoch(val) [180][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:12:31,284 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-02-26 02:12:33,785 - mmcls - INFO - Epoch(val) [181][3]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 02:12:42,885 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-02-26 02:12:45,420 - mmcls - INFO - Epoch(val) [182][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:12:54,540 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-02-26 02:12:57,043 - mmcls - INFO - Epoch(val) [183][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:13:06,175 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-02-26 02:13:08,750 - mmcls - INFO - Epoch(val) [184][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:13:17,789 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-02-26 02:13:20,352 - mmcls - INFO - Epoch(val) [185][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:13:29,252 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-02-26 02:13:31,785 - mmcls - INFO - Epoch(val) [186][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:13:40,901 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-02-26 02:13:43,502 - mmcls - INFO - Epoch(val) [187][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:13:52,809 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-02-26 02:13:55,272 - mmcls - INFO - Epoch(val) [188][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:14:04,403 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-02-26 02:14:06,888 - mmcls - INFO - Epoch(val) [189][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:14:16,017 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-02-26 02:14:18,445 - mmcls - INFO - Epoch(val) [190][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:14:27,599 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-02-26 02:14:30,186 - mmcls - INFO - Epoch(val) [191][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:14:39,403 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-02-26 02:14:41,899 - mmcls - INFO - Epoch(val) [192][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:14:50,971 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-02-26 02:14:53,612 - mmcls - INFO - Epoch(val) [193][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:15:02,778 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-02-26 02:15:05,391 - mmcls - INFO - Epoch(val) [194][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:15:14,518 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-02-26 02:15:16,990 - mmcls - INFO - Epoch(val) [195][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:15:26,174 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-02-26 02:15:28,612 - mmcls - INFO - Epoch(val) [196][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:15:37,749 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-02-26 02:15:40,146 - mmcls - INFO - Epoch(val) [197][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 02:15:49,212 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-02-26 02:15:51,590 - mmcls - INFO - Epoch(val) [198][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:16:00,778 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-02-26 02:16:03,263 - mmcls - INFO - Epoch(val) [199][3]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 02:16:12,171 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-02-26 02:16:14,650 - mmcls - INFO - Epoch(val) [200][3]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
