2024-02-25 09:44:02,304 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+35d7618
------------------------------------------------------------

2024-02-25 09:44:02,306 - mmcls - INFO - Distributed training: False
2024-02-25 09:44:02,507 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=64,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/test',
        ann_file='data/flowers/meta/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_flowers_bs64_lr0.01'
gpu_ids = range(0, 1)

2024-02-25 09:44:03,087 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-02-25 09:44:03,459 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-02-25 09:44:24,762 - mmcls - INFO - Start running, host: cshtimmy@gpu2-comp-102, work_dir: /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs64_lr0.01
2024-02-25 09:44:24,762 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-02-25 09:44:24,763 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-02-25 09:44:24,763 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs64_lr0.01 by HardDiskBackend.
2024-02-25 09:45:00,678 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-02-25 09:45:06,525 - mmcls - INFO - Epoch(val) [1][3]	accuracy_top-1: 25.7353, accuracy_top-5: 78.6765
2024-02-25 09:45:16,962 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-02-25 09:45:19,648 - mmcls - INFO - Epoch(val) [2][3]	accuracy_top-1: 43.3824, accuracy_top-5: 91.1765
2024-02-25 09:45:28,631 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-02-25 09:45:30,897 - mmcls - INFO - Epoch(val) [3][3]	accuracy_top-1: 50.7353, accuracy_top-5: 91.1765
2024-02-25 09:45:39,909 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-02-25 09:45:42,490 - mmcls - INFO - Epoch(val) [4][3]	accuracy_top-1: 45.5882, accuracy_top-5: 87.5000
2024-02-25 09:45:51,319 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-02-25 09:45:53,559 - mmcls - INFO - Epoch(val) [5][3]	accuracy_top-1: 50.0000, accuracy_top-5: 93.3824
2024-02-25 09:46:02,315 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-02-25 09:46:04,886 - mmcls - INFO - Epoch(val) [6][3]	accuracy_top-1: 49.2647, accuracy_top-5: 91.1765
2024-02-25 09:46:13,771 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-02-25 09:46:16,128 - mmcls - INFO - Epoch(val) [7][3]	accuracy_top-1: 47.7941, accuracy_top-5: 91.1765
2024-02-25 09:46:25,317 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-02-25 09:46:27,654 - mmcls - INFO - Epoch(val) [8][3]	accuracy_top-1: 54.4118, accuracy_top-5: 92.6471
2024-02-25 09:46:36,667 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-02-25 09:46:39,015 - mmcls - INFO - Epoch(val) [9][3]	accuracy_top-1: 55.1471, accuracy_top-5: 94.1176
2024-02-25 09:46:47,748 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-02-25 09:46:49,902 - mmcls - INFO - Epoch(val) [10][3]	accuracy_top-1: 55.1471, accuracy_top-5: 94.1176
2024-02-25 09:46:58,778 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-02-25 09:47:01,019 - mmcls - INFO - Epoch(val) [11][3]	accuracy_top-1: 52.9412, accuracy_top-5: 90.4412
2024-02-25 09:47:09,769 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-02-25 09:47:12,135 - mmcls - INFO - Epoch(val) [12][3]	accuracy_top-1: 58.0882, accuracy_top-5: 91.9118
2024-02-25 09:47:21,008 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-02-25 09:47:23,422 - mmcls - INFO - Epoch(val) [13][3]	accuracy_top-1: 58.8235, accuracy_top-5: 94.1176
2024-02-25 09:47:32,689 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-02-25 09:47:34,952 - mmcls - INFO - Epoch(val) [14][3]	accuracy_top-1: 57.3529, accuracy_top-5: 92.6471
2024-02-25 09:47:44,082 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-02-25 09:47:46,383 - mmcls - INFO - Epoch(val) [15][3]	accuracy_top-1: 60.2941, accuracy_top-5: 90.4412
2024-02-25 09:47:55,426 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-02-25 09:47:57,910 - mmcls - INFO - Epoch(val) [16][3]	accuracy_top-1: 51.4706, accuracy_top-5: 92.6471
2024-02-25 09:48:06,988 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-02-25 09:48:09,234 - mmcls - INFO - Epoch(val) [17][3]	accuracy_top-1: 52.2059, accuracy_top-5: 91.9118
2024-02-25 09:48:18,309 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-02-25 09:48:20,658 - mmcls - INFO - Epoch(val) [18][3]	accuracy_top-1: 57.3529, accuracy_top-5: 94.8529
2024-02-25 09:48:29,411 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-02-25 09:48:31,478 - mmcls - INFO - Epoch(val) [19][3]	accuracy_top-1: 55.8824, accuracy_top-5: 91.1765
2024-02-25 09:48:40,260 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-02-25 09:48:42,591 - mmcls - INFO - Epoch(val) [20][3]	accuracy_top-1: 62.5000, accuracy_top-5: 91.9118
2024-02-25 09:48:51,431 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-02-25 09:48:53,757 - mmcls - INFO - Epoch(val) [21][3]	accuracy_top-1: 55.8824, accuracy_top-5: 91.9118
2024-02-25 09:49:02,680 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-02-25 09:49:05,271 - mmcls - INFO - Epoch(val) [22][3]	accuracy_top-1: 61.0294, accuracy_top-5: 90.4412
2024-02-25 09:49:14,239 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-02-25 09:49:16,535 - mmcls - INFO - Epoch(val) [23][3]	accuracy_top-1: 59.5588, accuracy_top-5: 93.3824
2024-02-25 09:49:25,513 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-02-25 09:49:27,636 - mmcls - INFO - Epoch(val) [24][3]	accuracy_top-1: 56.6176, accuracy_top-5: 94.1176
2024-02-25 09:49:36,732 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-02-25 09:49:39,300 - mmcls - INFO - Epoch(val) [25][3]	accuracy_top-1: 63.9706, accuracy_top-5: 92.6471
2024-02-25 09:49:48,414 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-02-25 09:49:50,752 - mmcls - INFO - Epoch(val) [26][3]	accuracy_top-1: 61.0294, accuracy_top-5: 94.1176
2024-02-25 09:49:59,639 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-02-25 09:50:01,991 - mmcls - INFO - Epoch(val) [27][3]	accuracy_top-1: 59.5588, accuracy_top-5: 94.1176
2024-02-25 09:50:10,980 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-02-25 09:50:13,234 - mmcls - INFO - Epoch(val) [28][3]	accuracy_top-1: 62.5000, accuracy_top-5: 94.1176
2024-02-25 09:50:22,175 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-02-25 09:50:24,740 - mmcls - INFO - Epoch(val) [29][3]	accuracy_top-1: 58.8235, accuracy_top-5: 95.5882
2024-02-25 09:50:33,724 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-02-25 09:50:36,109 - mmcls - INFO - Epoch(val) [30][3]	accuracy_top-1: 63.9706, accuracy_top-5: 94.1176
2024-02-25 09:50:45,892 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-02-25 09:50:48,165 - mmcls - INFO - Epoch(val) [31][3]	accuracy_top-1: 58.0882, accuracy_top-5: 94.8529
2024-02-25 09:50:57,040 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-02-25 09:50:59,445 - mmcls - INFO - Epoch(val) [32][3]	accuracy_top-1: 58.8235, accuracy_top-5: 94.8529
2024-02-25 09:51:08,496 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-02-25 09:51:10,699 - mmcls - INFO - Epoch(val) [33][3]	accuracy_top-1: 57.3529, accuracy_top-5: 94.8529
2024-02-25 09:51:19,620 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-02-25 09:51:21,760 - mmcls - INFO - Epoch(val) [34][3]	accuracy_top-1: 62.5000, accuracy_top-5: 94.1176
2024-02-25 09:51:30,593 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-02-25 09:51:32,946 - mmcls - INFO - Epoch(val) [35][3]	accuracy_top-1: 59.5588, accuracy_top-5: 94.8529
2024-02-25 09:51:42,267 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-02-25 09:51:44,540 - mmcls - INFO - Epoch(val) [36][3]	accuracy_top-1: 61.0294, accuracy_top-5: 95.5882
2024-02-25 09:51:53,341 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-02-25 09:51:55,536 - mmcls - INFO - Epoch(val) [37][3]	accuracy_top-1: 66.9118, accuracy_top-5: 94.8529
2024-02-25 09:52:04,689 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-02-25 09:52:06,990 - mmcls - INFO - Epoch(val) [38][3]	accuracy_top-1: 66.9118, accuracy_top-5: 94.1176
2024-02-25 09:52:16,008 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-02-25 09:52:18,277 - mmcls - INFO - Epoch(val) [39][3]	accuracy_top-1: 61.0294, accuracy_top-5: 94.8529
2024-02-25 09:52:26,941 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-02-25 09:52:29,210 - mmcls - INFO - Epoch(val) [40][3]	accuracy_top-1: 64.7059, accuracy_top-5: 93.3824
2024-02-25 09:52:38,055 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-02-25 09:52:40,398 - mmcls - INFO - Epoch(val) [41][3]	accuracy_top-1: 57.3529, accuracy_top-5: 97.0588
2024-02-25 09:52:49,428 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-02-25 09:52:51,783 - mmcls - INFO - Epoch(val) [42][3]	accuracy_top-1: 59.5588, accuracy_top-5: 94.8529
2024-02-25 09:53:00,650 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-02-25 09:53:02,979 - mmcls - INFO - Epoch(val) [43][3]	accuracy_top-1: 58.8235, accuracy_top-5: 97.0588
2024-02-25 09:53:12,065 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-02-25 09:53:14,336 - mmcls - INFO - Epoch(val) [44][3]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 09:53:23,265 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-02-25 09:53:25,595 - mmcls - INFO - Epoch(val) [45][3]	accuracy_top-1: 64.7059, accuracy_top-5: 96.3235
2024-02-25 09:53:34,593 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-02-25 09:53:36,864 - mmcls - INFO - Epoch(val) [46][3]	accuracy_top-1: 61.0294, accuracy_top-5: 94.8529
2024-02-25 09:53:45,907 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-02-25 09:53:48,230 - mmcls - INFO - Epoch(val) [47][3]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-25 09:53:57,070 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-02-25 09:53:59,424 - mmcls - INFO - Epoch(val) [48][3]	accuracy_top-1: 59.5588, accuracy_top-5: 97.0588
2024-02-25 09:54:08,484 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-02-25 09:54:10,810 - mmcls - INFO - Epoch(val) [49][3]	accuracy_top-1: 61.0294, accuracy_top-5: 95.5882
2024-02-25 09:54:19,855 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-02-25 09:54:22,090 - mmcls - INFO - Epoch(val) [50][3]	accuracy_top-1: 58.0882, accuracy_top-5: 94.1176
2024-02-25 09:54:30,858 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-02-25 09:54:33,145 - mmcls - INFO - Epoch(val) [51][3]	accuracy_top-1: 57.3529, accuracy_top-5: 95.5882
2024-02-25 09:54:42,208 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-02-25 09:54:44,477 - mmcls - INFO - Epoch(val) [52][3]	accuracy_top-1: 68.3824, accuracy_top-5: 94.8529
2024-02-25 09:54:53,427 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-02-25 09:54:55,681 - mmcls - INFO - Epoch(val) [53][3]	accuracy_top-1: 58.8235, accuracy_top-5: 93.3824
2024-02-25 09:55:04,609 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-02-25 09:55:06,938 - mmcls - INFO - Epoch(val) [54][3]	accuracy_top-1: 57.3529, accuracy_top-5: 94.8529
2024-02-25 09:55:16,431 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-02-25 09:55:18,698 - mmcls - INFO - Epoch(val) [55][3]	accuracy_top-1: 62.5000, accuracy_top-5: 96.3235
2024-02-25 09:55:27,548 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-02-25 09:55:29,774 - mmcls - INFO - Epoch(val) [56][3]	accuracy_top-1: 67.6471, accuracy_top-5: 95.5882
2024-02-25 09:55:38,840 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-02-25 09:55:40,924 - mmcls - INFO - Epoch(val) [57][3]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-25 09:55:49,889 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-02-25 09:55:52,416 - mmcls - INFO - Epoch(val) [58][3]	accuracy_top-1: 66.9118, accuracy_top-5: 95.5882
2024-02-25 09:56:01,239 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-02-25 09:56:03,530 - mmcls - INFO - Epoch(val) [59][3]	accuracy_top-1: 64.7059, accuracy_top-5: 96.3235
2024-02-25 09:56:12,645 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-02-25 09:56:14,863 - mmcls - INFO - Epoch(val) [60][3]	accuracy_top-1: 52.2059, accuracy_top-5: 89.7059
2024-02-25 09:56:23,821 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-02-25 09:56:26,220 - mmcls - INFO - Epoch(val) [61][3]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-25 09:56:35,315 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-02-25 09:56:37,620 - mmcls - INFO - Epoch(val) [62][3]	accuracy_top-1: 63.2353, accuracy_top-5: 97.0588
2024-02-25 09:56:46,720 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-02-25 09:56:48,885 - mmcls - INFO - Epoch(val) [63][3]	accuracy_top-1: 62.5000, accuracy_top-5: 93.3824
2024-02-25 09:56:57,847 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-02-25 09:57:00,074 - mmcls - INFO - Epoch(val) [64][3]	accuracy_top-1: 69.1176, accuracy_top-5: 95.5882
2024-02-25 09:57:08,843 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-02-25 09:57:11,002 - mmcls - INFO - Epoch(val) [65][3]	accuracy_top-1: 66.1765, accuracy_top-5: 97.7941
2024-02-25 09:57:20,471 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-02-25 09:57:22,691 - mmcls - INFO - Epoch(val) [66][3]	accuracy_top-1: 70.5882, accuracy_top-5: 94.1176
2024-02-25 09:57:31,801 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-02-25 09:57:34,030 - mmcls - INFO - Epoch(val) [67][3]	accuracy_top-1: 68.3824, accuracy_top-5: 96.3235
2024-02-25 09:57:42,900 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-02-25 09:57:45,094 - mmcls - INFO - Epoch(val) [68][3]	accuracy_top-1: 63.2353, accuracy_top-5: 95.5882
2024-02-25 09:57:54,467 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-02-25 09:57:56,744 - mmcls - INFO - Epoch(val) [69][3]	accuracy_top-1: 69.8529, accuracy_top-5: 97.0588
2024-02-25 09:58:05,526 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-02-25 09:58:07,762 - mmcls - INFO - Epoch(val) [70][3]	accuracy_top-1: 69.1176, accuracy_top-5: 96.3235
2024-02-25 09:58:16,724 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-02-25 09:58:19,070 - mmcls - INFO - Epoch(val) [71][3]	accuracy_top-1: 68.3824, accuracy_top-5: 95.5882
2024-02-25 09:58:28,623 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-02-25 09:58:30,809 - mmcls - INFO - Epoch(val) [72][3]	accuracy_top-1: 66.9118, accuracy_top-5: 95.5882
2024-02-25 09:58:39,846 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-02-25 09:58:42,275 - mmcls - INFO - Epoch(val) [73][3]	accuracy_top-1: 61.0294, accuracy_top-5: 96.3235
2024-02-25 09:58:51,464 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-02-25 09:58:53,749 - mmcls - INFO - Epoch(val) [74][3]	accuracy_top-1: 70.5882, accuracy_top-5: 98.5294
2024-02-25 09:59:02,629 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-02-25 09:59:05,178 - mmcls - INFO - Epoch(val) [75][3]	accuracy_top-1: 60.2941, accuracy_top-5: 97.0588
2024-02-25 09:59:14,316 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-02-25 09:59:16,595 - mmcls - INFO - Epoch(val) [76][3]	accuracy_top-1: 64.7059, accuracy_top-5: 94.1176
2024-02-25 09:59:25,350 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-02-25 09:59:27,600 - mmcls - INFO - Epoch(val) [77][3]	accuracy_top-1: 69.1176, accuracy_top-5: 97.0588
2024-02-25 09:59:36,620 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-02-25 09:59:38,851 - mmcls - INFO - Epoch(val) [78][3]	accuracy_top-1: 69.8529, accuracy_top-5: 97.7941
2024-02-25 09:59:47,704 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-02-25 09:59:50,074 - mmcls - INFO - Epoch(val) [79][3]	accuracy_top-1: 70.5882, accuracy_top-5: 96.3235
2024-02-25 09:59:59,253 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-02-25 10:00:01,385 - mmcls - INFO - Epoch(val) [80][3]	accuracy_top-1: 63.9706, accuracy_top-5: 96.3235
2024-02-25 10:00:10,585 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-02-25 10:00:12,798 - mmcls - INFO - Epoch(val) [81][3]	accuracy_top-1: 67.6471, accuracy_top-5: 97.0588
2024-02-25 10:00:21,712 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-02-25 10:00:24,062 - mmcls - INFO - Epoch(val) [82][3]	accuracy_top-1: 59.5588, accuracy_top-5: 96.3235
2024-02-25 10:00:33,093 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-02-25 10:00:35,334 - mmcls - INFO - Epoch(val) [83][3]	accuracy_top-1: 70.5882, accuracy_top-5: 96.3235
2024-02-25 10:00:44,184 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-02-25 10:00:46,610 - mmcls - INFO - Epoch(val) [84][3]	accuracy_top-1: 71.3235, accuracy_top-5: 96.3235
2024-02-25 10:00:55,546 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-02-25 10:00:57,790 - mmcls - INFO - Epoch(val) [85][3]	accuracy_top-1: 69.1176, accuracy_top-5: 97.0588
2024-02-25 10:01:06,736 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-02-25 10:01:09,032 - mmcls - INFO - Epoch(val) [86][3]	accuracy_top-1: 70.5882, accuracy_top-5: 95.5882
2024-02-25 10:01:18,114 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-02-25 10:01:20,477 - mmcls - INFO - Epoch(val) [87][3]	accuracy_top-1: 70.5882, accuracy_top-5: 99.2647
2024-02-25 10:01:29,459 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-02-25 10:01:31,828 - mmcls - INFO - Epoch(val) [88][3]	accuracy_top-1: 72.7941, accuracy_top-5: 98.5294
2024-02-25 10:01:40,878 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-02-25 10:01:43,200 - mmcls - INFO - Epoch(val) [89][3]	accuracy_top-1: 74.2647, accuracy_top-5: 94.1176
2024-02-25 10:01:52,080 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-02-25 10:01:54,346 - mmcls - INFO - Epoch(val) [90][3]	accuracy_top-1: 66.9118, accuracy_top-5: 97.0588
2024-02-25 10:02:03,812 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-02-25 10:02:06,121 - mmcls - INFO - Epoch(val) [91][3]	accuracy_top-1: 65.4412, accuracy_top-5: 97.0588
2024-02-25 10:02:15,004 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-02-25 10:02:17,361 - mmcls - INFO - Epoch(val) [92][3]	accuracy_top-1: 69.8529, accuracy_top-5: 96.3235
2024-02-25 10:02:26,428 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-02-25 10:02:28,795 - mmcls - INFO - Epoch(val) [93][3]	accuracy_top-1: 69.8529, accuracy_top-5: 97.7941
2024-02-25 10:02:37,881 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-02-25 10:02:40,215 - mmcls - INFO - Epoch(val) [94][3]	accuracy_top-1: 71.3235, accuracy_top-5: 97.0588
2024-02-25 10:02:49,382 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-02-25 10:02:51,678 - mmcls - INFO - Epoch(val) [95][3]	accuracy_top-1: 76.4706, accuracy_top-5: 98.5294
2024-02-25 10:03:00,595 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-02-25 10:03:02,795 - mmcls - INFO - Epoch(val) [96][3]	accuracy_top-1: 69.8529, accuracy_top-5: 96.3235
2024-02-25 10:03:12,100 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-02-25 10:03:14,348 - mmcls - INFO - Epoch(val) [97][3]	accuracy_top-1: 66.1765, accuracy_top-5: 94.1176
2024-02-25 10:03:23,614 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-02-25 10:03:26,072 - mmcls - INFO - Epoch(val) [98][3]	accuracy_top-1: 70.5882, accuracy_top-5: 94.8529
2024-02-25 10:03:34,968 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-02-25 10:03:37,098 - mmcls - INFO - Epoch(val) [99][3]	accuracy_top-1: 75.7353, accuracy_top-5: 96.3235
2024-02-25 10:03:46,067 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-02-25 10:03:48,130 - mmcls - INFO - Epoch(val) [100][3]	accuracy_top-1: 69.1176, accuracy_top-5: 97.0588
2024-02-25 10:03:57,320 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-02-25 10:03:59,593 - mmcls - INFO - Epoch(val) [101][3]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-25 10:04:08,429 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-02-25 10:04:10,934 - mmcls - INFO - Epoch(val) [102][3]	accuracy_top-1: 77.9412, accuracy_top-5: 96.3235
2024-02-25 10:04:19,941 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-02-25 10:04:22,493 - mmcls - INFO - Epoch(val) [103][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.0588
2024-02-25 10:04:31,778 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-02-25 10:04:34,150 - mmcls - INFO - Epoch(val) [104][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.0588
2024-02-25 10:04:43,378 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-02-25 10:04:45,658 - mmcls - INFO - Epoch(val) [105][3]	accuracy_top-1: 75.7353, accuracy_top-5: 96.3235
2024-02-25 10:04:55,081 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-02-25 10:04:57,319 - mmcls - INFO - Epoch(val) [106][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.0588
2024-02-25 10:05:06,746 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-02-25 10:05:08,960 - mmcls - INFO - Epoch(val) [107][3]	accuracy_top-1: 75.7353, accuracy_top-5: 96.3235
2024-02-25 10:05:17,749 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-02-25 10:05:20,004 - mmcls - INFO - Epoch(val) [108][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:05:28,888 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-02-25 10:05:31,366 - mmcls - INFO - Epoch(val) [109][3]	accuracy_top-1: 80.8824, accuracy_top-5: 97.0588
2024-02-25 10:05:40,665 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-02-25 10:05:42,895 - mmcls - INFO - Epoch(val) [110][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:05:51,800 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-02-25 10:05:53,967 - mmcls - INFO - Epoch(val) [111][3]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-25 10:06:02,868 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-02-25 10:06:05,161 - mmcls - INFO - Epoch(val) [112][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:06:14,082 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-02-25 10:06:16,381 - mmcls - INFO - Epoch(val) [113][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:06:25,383 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-02-25 10:06:27,685 - mmcls - INFO - Epoch(val) [114][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:06:36,905 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-02-25 10:06:39,242 - mmcls - INFO - Epoch(val) [115][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:06:48,473 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-02-25 10:06:51,177 - mmcls - INFO - Epoch(val) [116][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:07:00,450 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-02-25 10:07:02,862 - mmcls - INFO - Epoch(val) [117][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:07:12,626 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-02-25 10:07:14,945 - mmcls - INFO - Epoch(val) [118][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:07:24,377 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-02-25 10:07:26,686 - mmcls - INFO - Epoch(val) [119][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:07:36,105 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-02-25 10:07:38,508 - mmcls - INFO - Epoch(val) [120][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:07:47,877 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-02-25 10:07:50,194 - mmcls - INFO - Epoch(val) [121][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:07:59,518 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-02-25 10:08:01,838 - mmcls - INFO - Epoch(val) [122][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:08:10,768 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-02-25 10:08:13,094 - mmcls - INFO - Epoch(val) [123][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.0588
2024-02-25 10:08:22,013 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-02-25 10:08:24,480 - mmcls - INFO - Epoch(val) [124][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:08:33,480 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-02-25 10:08:35,478 - mmcls - INFO - Epoch(val) [125][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:08:44,590 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-02-25 10:08:46,928 - mmcls - INFO - Epoch(val) [126][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:08:56,327 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-02-25 10:08:58,644 - mmcls - INFO - Epoch(val) [127][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:09:07,648 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-02-25 10:09:09,924 - mmcls - INFO - Epoch(val) [128][3]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-25 10:09:18,726 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-02-25 10:09:20,916 - mmcls - INFO - Epoch(val) [129][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.0588
2024-02-25 10:09:29,803 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-02-25 10:09:32,113 - mmcls - INFO - Epoch(val) [130][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:09:41,353 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-02-25 10:09:43,691 - mmcls - INFO - Epoch(val) [131][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:09:52,533 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-02-25 10:09:54,848 - mmcls - INFO - Epoch(val) [132][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:10:04,034 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-02-25 10:10:06,246 - mmcls - INFO - Epoch(val) [133][3]	accuracy_top-1: 80.8824, accuracy_top-5: 97.0588
2024-02-25 10:10:15,282 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-02-25 10:10:17,531 - mmcls - INFO - Epoch(val) [134][3]	accuracy_top-1: 80.8824, accuracy_top-5: 97.7941
2024-02-25 10:10:26,440 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-02-25 10:10:28,700 - mmcls - INFO - Epoch(val) [135][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:10:37,710 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-02-25 10:10:40,061 - mmcls - INFO - Epoch(val) [136][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-25 10:10:49,054 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-02-25 10:10:51,234 - mmcls - INFO - Epoch(val) [137][3]	accuracy_top-1: 80.8824, accuracy_top-5: 97.0588
2024-02-25 10:11:00,243 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-02-25 10:11:02,702 - mmcls - INFO - Epoch(val) [138][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:11:12,356 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-02-25 10:11:14,544 - mmcls - INFO - Epoch(val) [139][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:11:23,843 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-02-25 10:11:26,138 - mmcls - INFO - Epoch(val) [140][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-25 10:11:35,156 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-02-25 10:11:37,564 - mmcls - INFO - Epoch(val) [141][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:11:46,734 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-02-25 10:11:49,103 - mmcls - INFO - Epoch(val) [142][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.7941
2024-02-25 10:11:58,261 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-02-25 10:12:00,570 - mmcls - INFO - Epoch(val) [143][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:12:09,467 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-02-25 10:12:11,836 - mmcls - INFO - Epoch(val) [144][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:12:20,725 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-02-25 10:12:22,996 - mmcls - INFO - Epoch(val) [145][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:12:32,055 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-02-25 10:12:34,294 - mmcls - INFO - Epoch(val) [146][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-25 10:12:43,058 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-02-25 10:12:45,413 - mmcls - INFO - Epoch(val) [147][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:12:54,128 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-02-25 10:12:56,416 - mmcls - INFO - Epoch(val) [148][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:13:05,390 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-02-25 10:13:07,750 - mmcls - INFO - Epoch(val) [149][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.0588
2024-02-25 10:13:16,748 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-02-25 10:13:19,100 - mmcls - INFO - Epoch(val) [150][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:13:28,276 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-02-25 10:13:30,574 - mmcls - INFO - Epoch(val) [151][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:13:39,337 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-02-25 10:13:41,700 - mmcls - INFO - Epoch(val) [152][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:13:50,659 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-02-25 10:13:53,018 - mmcls - INFO - Epoch(val) [153][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:14:02,147 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-02-25 10:14:04,359 - mmcls - INFO - Epoch(val) [154][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.0588
2024-02-25 10:14:13,572 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-02-25 10:14:15,888 - mmcls - INFO - Epoch(val) [155][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:14:24,997 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-02-25 10:14:27,279 - mmcls - INFO - Epoch(val) [156][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-25 10:14:36,490 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-02-25 10:14:38,704 - mmcls - INFO - Epoch(val) [157][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:14:47,682 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-02-25 10:14:49,904 - mmcls - INFO - Epoch(val) [158][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:14:58,952 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-02-25 10:15:01,432 - mmcls - INFO - Epoch(val) [159][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-25 10:15:10,579 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-02-25 10:15:12,940 - mmcls - INFO - Epoch(val) [160][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.7941
2024-02-25 10:15:21,832 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-02-25 10:15:24,062 - mmcls - INFO - Epoch(val) [161][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:15:33,119 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-02-25 10:15:35,644 - mmcls - INFO - Epoch(val) [162][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:15:44,791 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-02-25 10:15:46,940 - mmcls - INFO - Epoch(val) [163][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:15:56,032 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-02-25 10:15:58,367 - mmcls - INFO - Epoch(val) [164][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:16:07,950 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-02-25 10:16:10,305 - mmcls - INFO - Epoch(val) [165][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:16:19,801 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-02-25 10:16:22,182 - mmcls - INFO - Epoch(val) [166][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.0588
2024-02-25 10:16:31,404 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-02-25 10:16:33,733 - mmcls - INFO - Epoch(val) [167][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:16:42,864 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-02-25 10:16:45,340 - mmcls - INFO - Epoch(val) [168][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:16:54,496 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-02-25 10:16:56,752 - mmcls - INFO - Epoch(val) [169][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.7941
2024-02-25 10:17:05,850 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-02-25 10:17:08,027 - mmcls - INFO - Epoch(val) [170][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:17:17,492 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-02-25 10:17:19,738 - mmcls - INFO - Epoch(val) [171][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:17:29,096 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-02-25 10:17:31,355 - mmcls - INFO - Epoch(val) [172][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-25 10:17:40,383 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-02-25 10:17:42,739 - mmcls - INFO - Epoch(val) [173][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:17:51,888 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-02-25 10:17:54,035 - mmcls - INFO - Epoch(val) [174][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:18:03,145 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-02-25 10:18:05,388 - mmcls - INFO - Epoch(val) [175][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:18:14,580 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-02-25 10:18:16,866 - mmcls - INFO - Epoch(val) [176][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.0588
2024-02-25 10:18:26,824 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-02-25 10:18:29,041 - mmcls - INFO - Epoch(val) [177][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:18:38,604 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-02-25 10:18:41,060 - mmcls - INFO - Epoch(val) [178][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:18:50,154 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-02-25 10:18:52,320 - mmcls - INFO - Epoch(val) [179][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-25 10:19:01,568 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-02-25 10:19:04,034 - mmcls - INFO - Epoch(val) [180][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-25 10:19:13,215 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-02-25 10:19:15,527 - mmcls - INFO - Epoch(val) [181][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:19:25,084 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-02-25 10:19:27,589 - mmcls - INFO - Epoch(val) [182][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:19:36,888 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-02-25 10:19:39,120 - mmcls - INFO - Epoch(val) [183][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:19:48,280 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-02-25 10:19:50,454 - mmcls - INFO - Epoch(val) [184][3]	accuracy_top-1: 80.8824, accuracy_top-5: 97.7941
2024-02-25 10:19:59,554 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-02-25 10:20:01,843 - mmcls - INFO - Epoch(val) [185][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:20:11,058 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-02-25 10:20:13,172 - mmcls - INFO - Epoch(val) [186][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:20:22,298 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-02-25 10:20:24,596 - mmcls - INFO - Epoch(val) [187][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:20:33,840 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-02-25 10:20:36,094 - mmcls - INFO - Epoch(val) [188][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:20:45,460 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-02-25 10:20:47,823 - mmcls - INFO - Epoch(val) [189][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-25 10:20:57,151 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-02-25 10:20:59,611 - mmcls - INFO - Epoch(val) [190][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:21:09,678 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-02-25 10:21:11,969 - mmcls - INFO - Epoch(val) [191][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:21:21,104 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-02-25 10:21:23,412 - mmcls - INFO - Epoch(val) [192][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-25 10:21:32,697 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-02-25 10:21:34,985 - mmcls - INFO - Epoch(val) [193][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:21:44,261 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-02-25 10:21:46,757 - mmcls - INFO - Epoch(val) [194][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:21:56,054 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-02-25 10:21:58,248 - mmcls - INFO - Epoch(val) [195][3]	accuracy_top-1: 80.1471, accuracy_top-5: 97.0588
2024-02-25 10:22:07,618 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-02-25 10:22:09,979 - mmcls - INFO - Epoch(val) [196][3]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-25 10:22:18,975 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-02-25 10:22:21,230 - mmcls - INFO - Epoch(val) [197][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-25 10:22:30,529 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-02-25 10:22:32,756 - mmcls - INFO - Epoch(val) [198][3]	accuracy_top-1: 77.2059, accuracy_top-5: 97.7941
2024-02-25 10:22:41,841 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-02-25 10:22:44,059 - mmcls - INFO - Epoch(val) [199][3]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-25 10:22:53,202 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-02-25 10:22:55,477 - mmcls - INFO - Epoch(val) [200][3]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
