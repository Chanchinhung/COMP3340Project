2024-02-24 23:05:44,174 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+3ce6fef
------------------------------------------------------------

2024-02-24 23:05:44,176 - mmcls - INFO - Distributed training: False
2024-02-24 23:05:44,376 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/test',
        ann_file='data/flowers/meta/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_flowers_bs16_lr0.01'
gpu_ids = range(0, 1)

2024-02-24 23:05:44,641 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-02-24 23:05:44,952 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-02-24 23:05:48,457 - mmcls - INFO - Start running, host: cshtimmy@gpu2-comp-202, work_dir: /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs16_lr0.01
2024-02-24 23:05:48,457 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-02-24 23:05:48,457 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-02-24 23:05:48,458 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs16_lr0.01 by HardDiskBackend.
2024-02-24 23:05:59,998 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-02-24 23:06:03,117 - mmcls - INFO - Epoch(val) [1][9]	accuracy_top-1: 41.9118, accuracy_top-5: 91.1765
2024-02-24 23:06:12,310 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-02-24 23:06:14,584 - mmcls - INFO - Epoch(val) [2][9]	accuracy_top-1: 49.2647, accuracy_top-5: 93.3824
2024-02-24 23:06:23,893 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-02-24 23:06:26,098 - mmcls - INFO - Epoch(val) [3][9]	accuracy_top-1: 47.7941, accuracy_top-5: 93.3824
2024-02-24 23:06:35,493 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-02-24 23:06:37,748 - mmcls - INFO - Epoch(val) [4][9]	accuracy_top-1: 43.3824, accuracy_top-5: 91.9118
2024-02-24 23:06:47,173 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-02-24 23:06:49,412 - mmcls - INFO - Epoch(val) [5][9]	accuracy_top-1: 49.2647, accuracy_top-5: 91.9118
2024-02-24 23:06:58,804 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-02-24 23:07:01,043 - mmcls - INFO - Epoch(val) [6][9]	accuracy_top-1: 52.2059, accuracy_top-5: 90.4412
2024-02-24 23:07:10,309 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-02-24 23:07:12,547 - mmcls - INFO - Epoch(val) [7][9]	accuracy_top-1: 55.1471, accuracy_top-5: 93.3824
2024-02-24 23:07:21,960 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-02-24 23:07:24,252 - mmcls - INFO - Epoch(val) [8][9]	accuracy_top-1: 52.9412, accuracy_top-5: 95.5882
2024-02-24 23:07:33,568 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-02-24 23:07:35,816 - mmcls - INFO - Epoch(val) [9][9]	accuracy_top-1: 51.4706, accuracy_top-5: 91.1765
2024-02-24 23:07:45,309 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-02-24 23:07:47,526 - mmcls - INFO - Epoch(val) [10][9]	accuracy_top-1: 58.8235, accuracy_top-5: 94.1176
2024-02-24 23:07:56,665 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-02-24 23:07:58,903 - mmcls - INFO - Epoch(val) [11][9]	accuracy_top-1: 58.8235, accuracy_top-5: 94.8529
2024-02-24 23:08:08,431 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-02-24 23:08:10,673 - mmcls - INFO - Epoch(val) [12][9]	accuracy_top-1: 58.8235, accuracy_top-5: 95.5882
2024-02-24 23:08:20,061 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-02-24 23:08:22,504 - mmcls - INFO - Epoch(val) [13][9]	accuracy_top-1: 61.0294, accuracy_top-5: 91.9118
2024-02-24 23:08:31,819 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-02-24 23:08:34,239 - mmcls - INFO - Epoch(val) [14][9]	accuracy_top-1: 58.8235, accuracy_top-5: 91.9118
2024-02-24 23:08:43,738 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-02-24 23:08:46,116 - mmcls - INFO - Epoch(val) [15][9]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-24 23:08:55,672 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-02-24 23:08:57,999 - mmcls - INFO - Epoch(val) [16][9]	accuracy_top-1: 55.1471, accuracy_top-5: 94.1176
2024-02-24 23:09:07,576 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-02-24 23:09:09,861 - mmcls - INFO - Epoch(val) [17][9]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-24 23:09:19,155 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-02-24 23:09:21,473 - mmcls - INFO - Epoch(val) [18][9]	accuracy_top-1: 63.2353, accuracy_top-5: 92.6471
2024-02-24 23:09:30,960 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-02-24 23:09:33,218 - mmcls - INFO - Epoch(val) [19][9]	accuracy_top-1: 63.2353, accuracy_top-5: 95.5882
2024-02-24 23:09:42,571 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-02-24 23:09:44,817 - mmcls - INFO - Epoch(val) [20][9]	accuracy_top-1: 62.5000, accuracy_top-5: 93.3824
2024-02-24 23:09:54,186 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-02-24 23:09:56,438 - mmcls - INFO - Epoch(val) [21][9]	accuracy_top-1: 64.7059, accuracy_top-5: 93.3824
2024-02-24 23:10:05,677 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-02-24 23:10:07,970 - mmcls - INFO - Epoch(val) [22][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-24 23:10:17,284 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-02-24 23:10:19,410 - mmcls - INFO - Epoch(val) [23][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.8529
2024-02-24 23:10:29,050 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-02-24 23:10:31,478 - mmcls - INFO - Epoch(val) [24][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.1176
2024-02-24 23:10:40,980 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-02-24 23:10:43,267 - mmcls - INFO - Epoch(val) [25][9]	accuracy_top-1: 55.8824, accuracy_top-5: 94.8529
2024-02-24 23:10:52,646 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-02-24 23:10:54,923 - mmcls - INFO - Epoch(val) [26][9]	accuracy_top-1: 61.7647, accuracy_top-5: 93.3824
2024-02-24 23:11:04,286 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-02-24 23:11:06,591 - mmcls - INFO - Epoch(val) [27][9]	accuracy_top-1: 62.5000, accuracy_top-5: 96.3235
2024-02-24 23:11:15,899 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-02-24 23:11:18,203 - mmcls - INFO - Epoch(val) [28][9]	accuracy_top-1: 65.4412, accuracy_top-5: 97.7941
2024-02-24 23:11:27,677 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-02-24 23:11:29,943 - mmcls - INFO - Epoch(val) [29][9]	accuracy_top-1: 55.8824, accuracy_top-5: 93.3824
2024-02-24 23:11:39,275 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-02-24 23:11:41,573 - mmcls - INFO - Epoch(val) [30][9]	accuracy_top-1: 72.0588, accuracy_top-5: 96.3235
2024-02-24 23:11:50,863 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-02-24 23:11:53,142 - mmcls - INFO - Epoch(val) [31][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-24 23:12:02,508 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-02-24 23:12:05,012 - mmcls - INFO - Epoch(val) [32][9]	accuracy_top-1: 67.6471, accuracy_top-5: 95.5882
2024-02-24 23:12:14,532 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-02-24 23:12:16,796 - mmcls - INFO - Epoch(val) [33][9]	accuracy_top-1: 67.6471, accuracy_top-5: 96.3235
2024-02-24 23:12:26,129 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-02-24 23:12:28,336 - mmcls - INFO - Epoch(val) [34][9]	accuracy_top-1: 75.0000, accuracy_top-5: 97.0588
2024-02-24 23:12:37,587 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-02-24 23:12:39,818 - mmcls - INFO - Epoch(val) [35][9]	accuracy_top-1: 74.2647, accuracy_top-5: 97.7941
2024-02-24 23:12:49,016 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-02-24 23:12:51,243 - mmcls - INFO - Epoch(val) [36][9]	accuracy_top-1: 71.3235, accuracy_top-5: 94.1176
2024-02-24 23:13:00,574 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-02-24 23:13:02,892 - mmcls - INFO - Epoch(val) [37][9]	accuracy_top-1: 66.1765, accuracy_top-5: 94.1176
2024-02-24 23:13:12,206 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-02-24 23:13:14,434 - mmcls - INFO - Epoch(val) [38][9]	accuracy_top-1: 74.2647, accuracy_top-5: 94.8529
2024-02-24 23:13:23,694 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-02-24 23:13:25,966 - mmcls - INFO - Epoch(val) [39][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-24 23:13:35,243 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-02-24 23:13:37,564 - mmcls - INFO - Epoch(val) [40][9]	accuracy_top-1: 74.2647, accuracy_top-5: 97.7941
2024-02-24 23:13:47,207 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-02-24 23:13:49,543 - mmcls - INFO - Epoch(val) [41][9]	accuracy_top-1: 75.7353, accuracy_top-5: 97.0588
2024-02-24 23:13:58,796 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-02-24 23:14:01,134 - mmcls - INFO - Epoch(val) [42][9]	accuracy_top-1: 71.3235, accuracy_top-5: 96.3235
2024-02-24 23:14:10,472 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-02-24 23:14:12,809 - mmcls - INFO - Epoch(val) [43][9]	accuracy_top-1: 72.7941, accuracy_top-5: 96.3235
2024-02-24 23:14:22,066 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-02-24 23:14:24,331 - mmcls - INFO - Epoch(val) [44][9]	accuracy_top-1: 72.7941, accuracy_top-5: 94.8529
2024-02-24 23:14:33,672 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-02-24 23:14:36,052 - mmcls - INFO - Epoch(val) [45][9]	accuracy_top-1: 75.7353, accuracy_top-5: 95.5882
2024-02-24 23:14:45,367 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-02-24 23:14:47,699 - mmcls - INFO - Epoch(val) [46][9]	accuracy_top-1: 74.2647, accuracy_top-5: 97.7941
2024-02-24 23:14:57,096 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-02-24 23:14:59,333 - mmcls - INFO - Epoch(val) [47][9]	accuracy_top-1: 73.5294, accuracy_top-5: 97.7941
2024-02-24 23:15:08,628 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-02-24 23:15:10,927 - mmcls - INFO - Epoch(val) [48][9]	accuracy_top-1: 74.2647, accuracy_top-5: 97.0588
2024-02-24 23:15:20,245 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-02-24 23:15:22,589 - mmcls - INFO - Epoch(val) [49][9]	accuracy_top-1: 76.4706, accuracy_top-5: 99.2647
2024-02-24 23:15:31,964 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-02-24 23:15:34,340 - mmcls - INFO - Epoch(val) [50][9]	accuracy_top-1: 75.0000, accuracy_top-5: 97.7941
2024-02-24 23:15:43,691 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-02-24 23:15:46,241 - mmcls - INFO - Epoch(val) [51][9]	accuracy_top-1: 76.4706, accuracy_top-5: 98.5294
2024-02-24 23:15:55,486 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-02-24 23:15:57,840 - mmcls - INFO - Epoch(val) [52][9]	accuracy_top-1: 72.7941, accuracy_top-5: 98.5294
2024-02-24 23:16:07,133 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-02-24 23:16:09,532 - mmcls - INFO - Epoch(val) [53][9]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-24 23:16:18,829 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-02-24 23:16:21,121 - mmcls - INFO - Epoch(val) [54][9]	accuracy_top-1: 73.5294, accuracy_top-5: 98.5294
2024-02-24 23:16:30,491 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-02-24 23:16:32,721 - mmcls - INFO - Epoch(val) [55][9]	accuracy_top-1: 78.6765, accuracy_top-5: 98.5294
2024-02-24 23:16:42,340 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-02-24 23:16:44,627 - mmcls - INFO - Epoch(val) [56][9]	accuracy_top-1: 78.6765, accuracy_top-5: 99.2647
2024-02-24 23:16:54,307 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-02-24 23:16:56,464 - mmcls - INFO - Epoch(val) [57][9]	accuracy_top-1: 77.9412, accuracy_top-5: 95.5882
2024-02-24 23:17:05,739 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-02-24 23:17:08,177 - mmcls - INFO - Epoch(val) [58][9]	accuracy_top-1: 78.6765, accuracy_top-5: 99.2647
2024-02-24 23:17:17,514 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-02-24 23:17:19,745 - mmcls - INFO - Epoch(val) [59][9]	accuracy_top-1: 80.8824, accuracy_top-5: 97.7941
2024-02-24 23:17:29,082 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-02-24 23:17:31,253 - mmcls - INFO - Epoch(val) [60][9]	accuracy_top-1: 76.4706, accuracy_top-5: 99.2647
2024-02-24 23:17:40,576 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-02-24 23:17:42,852 - mmcls - INFO - Epoch(val) [61][9]	accuracy_top-1: 80.1471, accuracy_top-5: 98.5294
2024-02-24 23:17:52,277 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-02-24 23:17:54,512 - mmcls - INFO - Epoch(val) [62][9]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-24 23:18:03,748 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-02-24 23:18:06,131 - mmcls - INFO - Epoch(val) [63][9]	accuracy_top-1: 76.4706, accuracy_top-5: 99.2647
2024-02-24 23:18:15,359 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-02-24 23:18:17,707 - mmcls - INFO - Epoch(val) [64][9]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-24 23:18:26,947 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-02-24 23:18:29,331 - mmcls - INFO - Epoch(val) [65][9]	accuracy_top-1: 75.0000, accuracy_top-5: 97.7941
2024-02-24 23:18:38,676 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-02-24 23:18:40,901 - mmcls - INFO - Epoch(val) [66][9]	accuracy_top-1: 77.2059, accuracy_top-5: 96.3235
2024-02-24 23:18:50,133 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-02-24 23:18:52,466 - mmcls - INFO - Epoch(val) [67][9]	accuracy_top-1: 80.1471, accuracy_top-5: 99.2647
2024-02-24 23:19:02,004 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-02-24 23:19:04,316 - mmcls - INFO - Epoch(val) [68][9]	accuracy_top-1: 77.9412, accuracy_top-5: 98.5294
2024-02-24 23:19:13,653 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-02-24 23:19:15,841 - mmcls - INFO - Epoch(val) [69][9]	accuracy_top-1: 77.9412, accuracy_top-5: 99.2647
2024-02-24 23:19:25,158 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-02-24 23:19:27,439 - mmcls - INFO - Epoch(val) [70][9]	accuracy_top-1: 78.6765, accuracy_top-5: 99.2647
2024-02-24 23:19:36,987 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-02-24 23:19:39,264 - mmcls - INFO - Epoch(val) [71][9]	accuracy_top-1: 74.2647, accuracy_top-5: 97.7941
2024-02-24 23:19:48,807 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-02-24 23:19:51,054 - mmcls - INFO - Epoch(val) [72][9]	accuracy_top-1: 76.4706, accuracy_top-5: 97.7941
2024-02-24 23:20:00,398 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-02-24 23:20:02,636 - mmcls - INFO - Epoch(val) [73][9]	accuracy_top-1: 83.8235, accuracy_top-5: 98.5294
2024-02-24 23:20:11,956 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-02-24 23:20:14,158 - mmcls - INFO - Epoch(val) [74][9]	accuracy_top-1: 82.3529, accuracy_top-5: 98.5294
2024-02-24 23:20:23,522 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-02-24 23:20:25,776 - mmcls - INFO - Epoch(val) [75][9]	accuracy_top-1: 85.2941, accuracy_top-5: 98.5294
2024-02-24 23:20:35,094 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-02-24 23:20:37,312 - mmcls - INFO - Epoch(val) [76][9]	accuracy_top-1: 74.2647, accuracy_top-5: 99.2647
2024-02-24 23:20:46,608 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-02-24 23:20:48,841 - mmcls - INFO - Epoch(val) [77][9]	accuracy_top-1: 74.2647, accuracy_top-5: 98.5294
2024-02-24 23:20:58,163 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-02-24 23:21:00,482 - mmcls - INFO - Epoch(val) [78][9]	accuracy_top-1: 81.6176, accuracy_top-5: 99.2647
2024-02-24 23:21:09,860 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-02-24 23:21:12,072 - mmcls - INFO - Epoch(val) [79][9]	accuracy_top-1: 77.9412, accuracy_top-5: 97.7941
2024-02-24 23:21:21,385 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-02-24 23:21:23,758 - mmcls - INFO - Epoch(val) [80][9]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-24 23:21:33,212 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-02-24 23:21:35,475 - mmcls - INFO - Epoch(val) [81][9]	accuracy_top-1: 84.5588, accuracy_top-5: 99.2647
2024-02-24 23:21:44,767 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-02-24 23:21:47,011 - mmcls - INFO - Epoch(val) [82][9]	accuracy_top-1: 82.3529, accuracy_top-5: 96.3235
2024-02-24 23:21:56,297 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-02-24 23:21:58,575 - mmcls - INFO - Epoch(val) [83][9]	accuracy_top-1: 83.0882, accuracy_top-5: 98.5294
2024-02-24 23:22:08,046 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-02-24 23:22:10,309 - mmcls - INFO - Epoch(val) [84][9]	accuracy_top-1: 82.3529, accuracy_top-5: 99.2647
2024-02-24 23:22:19,681 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-02-24 23:22:22,023 - mmcls - INFO - Epoch(val) [85][9]	accuracy_top-1: 80.8824, accuracy_top-5: 99.2647
2024-02-24 23:22:31,455 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-02-24 23:22:33,693 - mmcls - INFO - Epoch(val) [86][9]	accuracy_top-1: 80.1471, accuracy_top-5: 98.5294
2024-02-24 23:22:43,202 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-02-24 23:22:45,530 - mmcls - INFO - Epoch(val) [87][9]	accuracy_top-1: 83.0882, accuracy_top-5: 98.5294
2024-02-24 23:22:54,897 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-02-24 23:22:57,163 - mmcls - INFO - Epoch(val) [88][9]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-02-24 23:23:06,575 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-02-24 23:23:08,825 - mmcls - INFO - Epoch(val) [89][9]	accuracy_top-1: 83.8235, accuracy_top-5: 99.2647
2024-02-24 23:23:18,159 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-02-24 23:23:20,503 - mmcls - INFO - Epoch(val) [90][9]	accuracy_top-1: 81.6176, accuracy_top-5: 100.0000
2024-02-24 23:23:29,856 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-02-24 23:23:32,148 - mmcls - INFO - Epoch(val) [91][9]	accuracy_top-1: 81.6176, accuracy_top-5: 99.2647
2024-02-24 23:23:41,469 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-02-24 23:23:43,825 - mmcls - INFO - Epoch(val) [92][9]	accuracy_top-1: 77.9412, accuracy_top-5: 100.0000
2024-02-24 23:23:53,102 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-02-24 23:23:55,365 - mmcls - INFO - Epoch(val) [93][9]	accuracy_top-1: 83.8235, accuracy_top-5: 98.5294
2024-02-24 23:24:04,663 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-02-24 23:24:06,910 - mmcls - INFO - Epoch(val) [94][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:24:16,340 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-02-24 23:24:18,656 - mmcls - INFO - Epoch(val) [95][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-24 23:24:28,067 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-02-24 23:24:30,345 - mmcls - INFO - Epoch(val) [96][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.7941
2024-02-24 23:24:39,580 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-02-24 23:24:41,893 - mmcls - INFO - Epoch(val) [97][9]	accuracy_top-1: 81.6176, accuracy_top-5: 99.2647
2024-02-24 23:24:51,390 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-02-24 23:24:53,621 - mmcls - INFO - Epoch(val) [98][9]	accuracy_top-1: 84.5588, accuracy_top-5: 97.7941
2024-02-24 23:25:02,935 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-02-24 23:25:05,432 - mmcls - INFO - Epoch(val) [99][9]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-24 23:25:14,849 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-02-24 23:25:17,102 - mmcls - INFO - Epoch(val) [100][9]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-24 23:25:26,479 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-02-24 23:25:28,725 - mmcls - INFO - Epoch(val) [101][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:25:38,005 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-02-24 23:25:40,390 - mmcls - INFO - Epoch(val) [102][9]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-02-24 23:25:49,757 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-02-24 23:25:52,054 - mmcls - INFO - Epoch(val) [103][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:26:01,381 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-02-24 23:26:03,695 - mmcls - INFO - Epoch(val) [104][9]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-02-24 23:26:13,225 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-02-24 23:26:15,480 - mmcls - INFO - Epoch(val) [105][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:26:24,906 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-02-24 23:26:27,209 - mmcls - INFO - Epoch(val) [106][9]	accuracy_top-1: 84.5588, accuracy_top-5: 100.0000
2024-02-24 23:26:36,476 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-02-24 23:26:38,892 - mmcls - INFO - Epoch(val) [107][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:26:48,174 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-02-24 23:26:50,405 - mmcls - INFO - Epoch(val) [108][9]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-02-24 23:26:59,802 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-02-24 23:27:02,115 - mmcls - INFO - Epoch(val) [109][9]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-02-24 23:27:11,481 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-02-24 23:27:13,759 - mmcls - INFO - Epoch(val) [110][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:27:23,280 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-02-24 23:27:25,581 - mmcls - INFO - Epoch(val) [111][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:27:35,005 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-02-24 23:27:37,318 - mmcls - INFO - Epoch(val) [112][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:27:46,676 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-02-24 23:27:49,042 - mmcls - INFO - Epoch(val) [113][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:27:58,409 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-02-24 23:28:00,690 - mmcls - INFO - Epoch(val) [114][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:28:10,004 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-02-24 23:28:12,263 - mmcls - INFO - Epoch(val) [115][9]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-02-24 23:28:21,798 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-02-24 23:28:24,087 - mmcls - INFO - Epoch(val) [116][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:28:33,376 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-02-24 23:28:35,713 - mmcls - INFO - Epoch(val) [117][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:28:45,259 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-02-24 23:28:47,580 - mmcls - INFO - Epoch(val) [118][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:28:56,993 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-02-24 23:28:59,214 - mmcls - INFO - Epoch(val) [119][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:29:08,556 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-02-24 23:29:10,880 - mmcls - INFO - Epoch(val) [120][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:29:20,288 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-02-24 23:29:22,561 - mmcls - INFO - Epoch(val) [121][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:29:31,919 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-02-24 23:29:34,222 - mmcls - INFO - Epoch(val) [122][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:29:43,479 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-02-24 23:29:45,722 - mmcls - INFO - Epoch(val) [123][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:29:55,087 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-02-24 23:29:57,367 - mmcls - INFO - Epoch(val) [124][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:30:06,779 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-02-24 23:30:09,019 - mmcls - INFO - Epoch(val) [125][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:30:18,254 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-02-24 23:30:20,843 - mmcls - INFO - Epoch(val) [126][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-24 23:30:30,299 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-02-24 23:30:32,697 - mmcls - INFO - Epoch(val) [127][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:30:42,064 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-02-24 23:30:44,350 - mmcls - INFO - Epoch(val) [128][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:30:53,681 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-02-24 23:30:55,933 - mmcls - INFO - Epoch(val) [129][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:31:05,357 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-02-24 23:31:07,630 - mmcls - INFO - Epoch(val) [130][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:31:17,233 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-02-24 23:31:19,554 - mmcls - INFO - Epoch(val) [131][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:31:28,855 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-02-24 23:31:31,168 - mmcls - INFO - Epoch(val) [132][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:31:40,506 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-02-24 23:31:42,812 - mmcls - INFO - Epoch(val) [133][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:31:52,269 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-02-24 23:31:54,523 - mmcls - INFO - Epoch(val) [134][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:32:03,804 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-02-24 23:32:06,142 - mmcls - INFO - Epoch(val) [135][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:32:15,816 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-02-24 23:32:18,160 - mmcls - INFO - Epoch(val) [136][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:32:27,387 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-02-24 23:32:29,680 - mmcls - INFO - Epoch(val) [137][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:32:39,186 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-02-24 23:32:41,500 - mmcls - INFO - Epoch(val) [138][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:32:51,122 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-02-24 23:32:53,382 - mmcls - INFO - Epoch(val) [139][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:33:02,765 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-02-24 23:33:05,042 - mmcls - INFO - Epoch(val) [140][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:33:14,536 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-02-24 23:33:16,820 - mmcls - INFO - Epoch(val) [141][9]	accuracy_top-1: 86.0294, accuracy_top-5: 100.0000
2024-02-24 23:33:26,204 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-02-24 23:33:28,511 - mmcls - INFO - Epoch(val) [142][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:33:37,839 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-02-24 23:33:40,217 - mmcls - INFO - Epoch(val) [143][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:33:49,837 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-02-24 23:33:52,182 - mmcls - INFO - Epoch(val) [144][9]	accuracy_top-1: 86.7647, accuracy_top-5: 100.0000
2024-02-24 23:34:01,535 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-02-24 23:34:03,825 - mmcls - INFO - Epoch(val) [145][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:34:13,301 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-02-24 23:34:15,575 - mmcls - INFO - Epoch(val) [146][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:34:24,857 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-02-24 23:34:27,172 - mmcls - INFO - Epoch(val) [147][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:34:36,749 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-02-24 23:34:38,969 - mmcls - INFO - Epoch(val) [148][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:34:48,307 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-02-24 23:34:50,651 - mmcls - INFO - Epoch(val) [149][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:35:00,204 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-02-24 23:35:02,510 - mmcls - INFO - Epoch(val) [150][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:35:12,050 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-02-24 23:35:14,382 - mmcls - INFO - Epoch(val) [151][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:35:23,885 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-02-24 23:35:26,021 - mmcls - INFO - Epoch(val) [152][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:35:35,530 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-02-24 23:35:37,787 - mmcls - INFO - Epoch(val) [153][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:35:47,161 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-02-24 23:35:49,437 - mmcls - INFO - Epoch(val) [154][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:35:58,887 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-02-24 23:36:01,135 - mmcls - INFO - Epoch(val) [155][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:36:10,371 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-02-24 23:36:12,653 - mmcls - INFO - Epoch(val) [156][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:36:22,098 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-02-24 23:36:24,396 - mmcls - INFO - Epoch(val) [157][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:36:33,695 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-02-24 23:36:35,916 - mmcls - INFO - Epoch(val) [158][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:36:45,142 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-02-24 23:36:47,333 - mmcls - INFO - Epoch(val) [159][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:36:56,746 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-02-24 23:36:58,990 - mmcls - INFO - Epoch(val) [160][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:37:08,416 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-02-24 23:37:10,754 - mmcls - INFO - Epoch(val) [161][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:37:20,276 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-02-24 23:37:22,685 - mmcls - INFO - Epoch(val) [162][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:37:31,916 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-02-24 23:37:34,288 - mmcls - INFO - Epoch(val) [163][9]	accuracy_top-1: 89.7059, accuracy_top-5: 100.0000
2024-02-24 23:37:43,594 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-02-24 23:37:45,913 - mmcls - INFO - Epoch(val) [164][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:37:55,229 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-02-24 23:37:57,571 - mmcls - INFO - Epoch(val) [165][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:38:06,850 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-02-24 23:38:09,147 - mmcls - INFO - Epoch(val) [166][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:38:18,507 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-02-24 23:38:20,849 - mmcls - INFO - Epoch(val) [167][9]	accuracy_top-1: 89.7059, accuracy_top-5: 100.0000
2024-02-24 23:38:30,233 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-02-24 23:38:32,511 - mmcls - INFO - Epoch(val) [168][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:38:41,847 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-02-24 23:38:44,189 - mmcls - INFO - Epoch(val) [169][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:38:53,501 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-02-24 23:38:55,766 - mmcls - INFO - Epoch(val) [170][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:39:05,098 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-02-24 23:39:07,353 - mmcls - INFO - Epoch(val) [171][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:39:16,589 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-02-24 23:39:18,883 - mmcls - INFO - Epoch(val) [172][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:39:28,057 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-02-24 23:39:30,324 - mmcls - INFO - Epoch(val) [173][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:39:39,768 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-02-24 23:39:42,171 - mmcls - INFO - Epoch(val) [174][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:39:51,665 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-02-24 23:39:53,967 - mmcls - INFO - Epoch(val) [175][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:40:03,295 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-02-24 23:40:05,508 - mmcls - INFO - Epoch(val) [176][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:40:14,858 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-02-24 23:40:17,199 - mmcls - INFO - Epoch(val) [177][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:40:26,502 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-02-24 23:40:28,738 - mmcls - INFO - Epoch(val) [178][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:40:38,063 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-02-24 23:40:40,289 - mmcls - INFO - Epoch(val) [179][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:40:49,584 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-02-24 23:40:51,864 - mmcls - INFO - Epoch(val) [180][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:41:01,369 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-02-24 23:41:03,704 - mmcls - INFO - Epoch(val) [181][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:41:12,998 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-02-24 23:41:15,500 - mmcls - INFO - Epoch(val) [182][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:41:24,967 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-02-24 23:41:27,230 - mmcls - INFO - Epoch(val) [183][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:41:36,862 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-02-24 23:41:39,176 - mmcls - INFO - Epoch(val) [184][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:41:48,444 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-02-24 23:41:50,733 - mmcls - INFO - Epoch(val) [185][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:42:00,160 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-02-24 23:42:02,389 - mmcls - INFO - Epoch(val) [186][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:42:11,912 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-02-24 23:42:14,264 - mmcls - INFO - Epoch(val) [187][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:42:23,536 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-02-24 23:42:26,018 - mmcls - INFO - Epoch(val) [188][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:42:35,026 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-02-24 23:42:37,424 - mmcls - INFO - Epoch(val) [189][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:42:47,038 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-02-24 23:42:49,312 - mmcls - INFO - Epoch(val) [190][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:42:59,004 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-02-24 23:43:01,510 - mmcls - INFO - Epoch(val) [191][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:43:10,859 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-02-24 23:43:13,092 - mmcls - INFO - Epoch(val) [192][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:43:22,366 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-02-24 23:43:24,643 - mmcls - INFO - Epoch(val) [193][9]	accuracy_top-1: 88.9706, accuracy_top-5: 100.0000
2024-02-24 23:43:33,960 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-02-24 23:43:36,458 - mmcls - INFO - Epoch(val) [194][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:43:45,615 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-02-24 23:43:47,838 - mmcls - INFO - Epoch(val) [195][9]	accuracy_top-1: 87.5000, accuracy_top-5: 100.0000
2024-02-24 23:43:57,012 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-02-24 23:43:59,295 - mmcls - INFO - Epoch(val) [196][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:44:08,428 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-02-24 23:44:11,017 - mmcls - INFO - Epoch(val) [197][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:44:20,388 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-02-24 23:44:22,723 - mmcls - INFO - Epoch(val) [198][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:44:31,959 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-02-24 23:44:34,352 - mmcls - INFO - Epoch(val) [199][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-02-24 23:44:43,717 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-02-24 23:44:46,052 - mmcls - INFO - Epoch(val) [200][9]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
