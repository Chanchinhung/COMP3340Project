2024-02-26 00:54:36,992 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+35d7618
------------------------------------------------------------

2024-02-26 00:54:36,994 - mmcls - INFO - Distributed training: False
2024-02-26 00:54:37,195 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/test',
        ann_file='data/flowers/meta/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_flowers_bs16_lr0.1'
gpu_ids = range(0, 1)

2024-02-26 00:54:37,485 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-02-26 00:54:37,784 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-02-26 00:54:41,230 - mmcls - INFO - Start running, host: cshtimmy@gpu2-comp-204, work_dir: /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs16_lr0.1
2024-02-26 00:54:41,230 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-02-26 00:54:41,231 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-02-26 00:54:41,231 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs16_lr0.1 by HardDiskBackend.
2024-02-26 00:54:54,076 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-02-26 00:54:56,857 - mmcls - INFO - Epoch(val) [1][9]	accuracy_top-1: 32.3529, accuracy_top-5: 79.4118
2024-02-26 00:55:06,733 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-02-26 00:55:09,199 - mmcls - INFO - Epoch(val) [2][9]	accuracy_top-1: 43.3824, accuracy_top-5: 89.7059
2024-02-26 00:55:18,497 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-02-26 00:55:20,608 - mmcls - INFO - Epoch(val) [3][9]	accuracy_top-1: 46.3235, accuracy_top-5: 94.1176
2024-02-26 00:55:29,859 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-02-26 00:55:32,287 - mmcls - INFO - Epoch(val) [4][9]	accuracy_top-1: 51.4706, accuracy_top-5: 92.6471
2024-02-26 00:55:41,583 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-02-26 00:55:43,973 - mmcls - INFO - Epoch(val) [5][9]	accuracy_top-1: 55.8824, accuracy_top-5: 97.0588
2024-02-26 00:55:53,224 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-02-26 00:55:55,903 - mmcls - INFO - Epoch(val) [6][9]	accuracy_top-1: 59.5588, accuracy_top-5: 95.5882
2024-02-26 00:56:04,898 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-02-26 00:56:07,465 - mmcls - INFO - Epoch(val) [7][9]	accuracy_top-1: 57.3529, accuracy_top-5: 93.3824
2024-02-26 00:56:17,390 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-02-26 00:56:19,782 - mmcls - INFO - Epoch(val) [8][9]	accuracy_top-1: 58.0882, accuracy_top-5: 94.1176
2024-02-26 00:56:28,876 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-02-26 00:56:31,260 - mmcls - INFO - Epoch(val) [9][9]	accuracy_top-1: 57.3529, accuracy_top-5: 94.8529
2024-02-26 00:56:40,355 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-02-26 00:56:42,748 - mmcls - INFO - Epoch(val) [10][9]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-26 00:56:52,042 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-02-26 00:56:54,706 - mmcls - INFO - Epoch(val) [11][9]	accuracy_top-1: 60.2941, accuracy_top-5: 94.8529
2024-02-26 00:57:03,922 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-02-26 00:57:06,674 - mmcls - INFO - Epoch(val) [12][9]	accuracy_top-1: 63.9706, accuracy_top-5: 95.5882
2024-02-26 00:57:15,563 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-02-26 00:57:17,813 - mmcls - INFO - Epoch(val) [13][9]	accuracy_top-1: 66.1765, accuracy_top-5: 94.8529
2024-02-26 00:57:27,192 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-02-26 00:57:29,539 - mmcls - INFO - Epoch(val) [14][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.1176
2024-02-26 00:57:38,578 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-02-26 00:57:41,043 - mmcls - INFO - Epoch(val) [15][9]	accuracy_top-1: 70.5882, accuracy_top-5: 94.1176
2024-02-26 00:57:50,386 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-02-26 00:57:52,851 - mmcls - INFO - Epoch(val) [16][9]	accuracy_top-1: 68.3824, accuracy_top-5: 95.5882
2024-02-26 00:58:02,139 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-02-26 00:58:04,496 - mmcls - INFO - Epoch(val) [17][9]	accuracy_top-1: 72.0588, accuracy_top-5: 94.1176
2024-02-26 00:58:13,875 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-02-26 00:58:16,309 - mmcls - INFO - Epoch(val) [18][9]	accuracy_top-1: 63.9706, accuracy_top-5: 91.9118
2024-02-26 00:58:25,403 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-02-26 00:58:27,855 - mmcls - INFO - Epoch(val) [19][9]	accuracy_top-1: 66.9118, accuracy_top-5: 99.2647
2024-02-26 00:58:36,949 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-02-26 00:58:39,301 - mmcls - INFO - Epoch(val) [20][9]	accuracy_top-1: 70.5882, accuracy_top-5: 95.5882
2024-02-26 00:58:48,234 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-02-26 00:58:50,639 - mmcls - INFO - Epoch(val) [21][9]	accuracy_top-1: 70.5882, accuracy_top-5: 92.6471
2024-02-26 00:58:59,987 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-02-26 00:59:02,432 - mmcls - INFO - Epoch(val) [22][9]	accuracy_top-1: 73.5294, accuracy_top-5: 97.0588
2024-02-26 00:59:11,568 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-02-26 00:59:13,953 - mmcls - INFO - Epoch(val) [23][9]	accuracy_top-1: 67.6471, accuracy_top-5: 98.5294
2024-02-26 00:59:22,706 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-02-26 00:59:25,072 - mmcls - INFO - Epoch(val) [24][9]	accuracy_top-1: 74.2647, accuracy_top-5: 99.2647
2024-02-26 00:59:34,008 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-02-26 00:59:36,415 - mmcls - INFO - Epoch(val) [25][9]	accuracy_top-1: 72.0588, accuracy_top-5: 97.0588
2024-02-26 00:59:45,602 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-02-26 00:59:47,963 - mmcls - INFO - Epoch(val) [26][9]	accuracy_top-1: 75.7353, accuracy_top-5: 97.7941
2024-02-26 00:59:56,991 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-02-26 00:59:59,349 - mmcls - INFO - Epoch(val) [27][9]	accuracy_top-1: 69.8529, accuracy_top-5: 95.5882
2024-02-26 01:00:08,371 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-02-26 01:00:10,845 - mmcls - INFO - Epoch(val) [28][9]	accuracy_top-1: 69.1176, accuracy_top-5: 95.5882
2024-02-26 01:00:20,021 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-02-26 01:00:22,435 - mmcls - INFO - Epoch(val) [29][9]	accuracy_top-1: 72.0588, accuracy_top-5: 97.7941
2024-02-26 01:00:31,657 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-02-26 01:00:34,043 - mmcls - INFO - Epoch(val) [30][9]	accuracy_top-1: 74.2647, accuracy_top-5: 97.7941
2024-02-26 01:00:43,109 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-02-26 01:00:45,687 - mmcls - INFO - Epoch(val) [31][9]	accuracy_top-1: 80.8824, accuracy_top-5: 96.3235
2024-02-26 01:00:54,936 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-02-26 01:00:57,534 - mmcls - INFO - Epoch(val) [32][9]	accuracy_top-1: 75.7353, accuracy_top-5: 97.7941
2024-02-26 01:01:06,524 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-02-26 01:01:08,983 - mmcls - INFO - Epoch(val) [33][9]	accuracy_top-1: 72.7941, accuracy_top-5: 95.5882
2024-02-26 01:01:18,225 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-02-26 01:01:20,792 - mmcls - INFO - Epoch(val) [34][9]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-26 01:01:29,989 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-02-26 01:01:32,352 - mmcls - INFO - Epoch(val) [35][9]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-26 01:01:41,672 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-02-26 01:01:44,114 - mmcls - INFO - Epoch(val) [36][9]	accuracy_top-1: 80.1471, accuracy_top-5: 97.0588
2024-02-26 01:01:53,205 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-02-26 01:01:55,737 - mmcls - INFO - Epoch(val) [37][9]	accuracy_top-1: 78.6765, accuracy_top-5: 99.2647
2024-02-26 01:02:05,158 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-02-26 01:02:07,569 - mmcls - INFO - Epoch(val) [38][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.0588
2024-02-26 01:02:16,782 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-02-26 01:02:19,095 - mmcls - INFO - Epoch(val) [39][9]	accuracy_top-1: 80.1471, accuracy_top-5: 99.2647
2024-02-26 01:02:28,132 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-02-26 01:02:30,579 - mmcls - INFO - Epoch(val) [40][9]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-26 01:02:39,615 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-02-26 01:02:42,038 - mmcls - INFO - Epoch(val) [41][9]	accuracy_top-1: 75.0000, accuracy_top-5: 97.7941
2024-02-26 01:02:51,205 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-02-26 01:02:53,758 - mmcls - INFO - Epoch(val) [42][9]	accuracy_top-1: 72.7941, accuracy_top-5: 97.0588
2024-02-26 01:03:02,728 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-02-26 01:03:05,124 - mmcls - INFO - Epoch(val) [43][9]	accuracy_top-1: 77.2059, accuracy_top-5: 99.2647
2024-02-26 01:03:13,993 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-02-26 01:03:16,377 - mmcls - INFO - Epoch(val) [44][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.7941
2024-02-26 01:03:25,346 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-02-26 01:03:27,845 - mmcls - INFO - Epoch(val) [45][9]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-26 01:03:36,962 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-02-26 01:03:39,569 - mmcls - INFO - Epoch(val) [46][9]	accuracy_top-1: 77.9412, accuracy_top-5: 96.3235
2024-02-26 01:03:48,693 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-02-26 01:03:51,064 - mmcls - INFO - Epoch(val) [47][9]	accuracy_top-1: 77.9412, accuracy_top-5: 99.2647
2024-02-26 01:04:00,066 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-02-26 01:04:02,401 - mmcls - INFO - Epoch(val) [48][9]	accuracy_top-1: 77.2059, accuracy_top-5: 94.8529
2024-02-26 01:04:11,361 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-02-26 01:04:13,960 - mmcls - INFO - Epoch(val) [49][9]	accuracy_top-1: 79.4118, accuracy_top-5: 95.5882
2024-02-26 01:04:23,159 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-02-26 01:04:25,565 - mmcls - INFO - Epoch(val) [50][9]	accuracy_top-1: 75.0000, accuracy_top-5: 94.8529
2024-02-26 01:04:34,887 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-02-26 01:04:37,362 - mmcls - INFO - Epoch(val) [51][9]	accuracy_top-1: 76.4706, accuracy_top-5: 97.0588
2024-02-26 01:04:46,321 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-02-26 01:04:48,791 - mmcls - INFO - Epoch(val) [52][9]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-02-26 01:04:58,308 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-02-26 01:05:00,685 - mmcls - INFO - Epoch(val) [53][9]	accuracy_top-1: 75.7353, accuracy_top-5: 95.5882
2024-02-26 01:05:10,316 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-02-26 01:05:12,619 - mmcls - INFO - Epoch(val) [54][9]	accuracy_top-1: 80.8824, accuracy_top-5: 98.5294
2024-02-26 01:05:21,449 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-02-26 01:05:23,833 - mmcls - INFO - Epoch(val) [55][9]	accuracy_top-1: 75.7353, accuracy_top-5: 97.7941
2024-02-26 01:05:32,757 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-02-26 01:05:35,430 - mmcls - INFO - Epoch(val) [56][9]	accuracy_top-1: 82.3529, accuracy_top-5: 98.5294
2024-02-26 01:05:44,393 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-02-26 01:05:46,745 - mmcls - INFO - Epoch(val) [57][9]	accuracy_top-1: 77.2059, accuracy_top-5: 99.2647
2024-02-26 01:05:55,670 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-02-26 01:05:58,170 - mmcls - INFO - Epoch(val) [58][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.7941
2024-02-26 01:06:07,343 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-02-26 01:06:09,735 - mmcls - INFO - Epoch(val) [59][9]	accuracy_top-1: 80.8824, accuracy_top-5: 100.0000
2024-02-26 01:06:18,878 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-02-26 01:06:21,210 - mmcls - INFO - Epoch(val) [60][9]	accuracy_top-1: 83.0882, accuracy_top-5: 97.0588
2024-02-26 01:06:29,859 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-02-26 01:06:32,213 - mmcls - INFO - Epoch(val) [61][9]	accuracy_top-1: 82.3529, accuracy_top-5: 97.7941
2024-02-26 01:06:41,224 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-02-26 01:06:43,562 - mmcls - INFO - Epoch(val) [62][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.0588
2024-02-26 01:06:52,628 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-02-26 01:06:54,993 - mmcls - INFO - Epoch(val) [63][9]	accuracy_top-1: 80.8824, accuracy_top-5: 97.7941
2024-02-26 01:07:04,269 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-02-26 01:07:06,748 - mmcls - INFO - Epoch(val) [64][9]	accuracy_top-1: 78.6765, accuracy_top-5: 97.0588
2024-02-26 01:07:16,075 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-02-26 01:07:18,607 - mmcls - INFO - Epoch(val) [65][9]	accuracy_top-1: 82.3529, accuracy_top-5: 97.0588
2024-02-26 01:07:27,733 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-02-26 01:07:30,110 - mmcls - INFO - Epoch(val) [66][9]	accuracy_top-1: 83.8235, accuracy_top-5: 97.7941
2024-02-26 01:07:39,059 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-02-26 01:07:41,592 - mmcls - INFO - Epoch(val) [67][9]	accuracy_top-1: 83.0882, accuracy_top-5: 98.5294
2024-02-26 01:07:50,693 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-02-26 01:07:53,093 - mmcls - INFO - Epoch(val) [68][9]	accuracy_top-1: 77.9412, accuracy_top-5: 99.2647
2024-02-26 01:08:02,360 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-02-26 01:08:04,706 - mmcls - INFO - Epoch(val) [69][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.0588
2024-02-26 01:08:13,563 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-02-26 01:08:16,117 - mmcls - INFO - Epoch(val) [70][9]	accuracy_top-1: 80.1471, accuracy_top-5: 97.7941
2024-02-26 01:08:24,966 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-02-26 01:08:27,347 - mmcls - INFO - Epoch(val) [71][9]	accuracy_top-1: 76.4706, accuracy_top-5: 96.3235
2024-02-26 01:08:36,549 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-02-26 01:08:39,412 - mmcls - INFO - Epoch(val) [72][9]	accuracy_top-1: 78.6765, accuracy_top-5: 98.5294
2024-02-26 01:08:48,452 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-02-26 01:08:50,948 - mmcls - INFO - Epoch(val) [73][9]	accuracy_top-1: 83.0882, accuracy_top-5: 97.7941
2024-02-26 01:09:00,185 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-02-26 01:09:02,786 - mmcls - INFO - Epoch(val) [74][9]	accuracy_top-1: 82.3529, accuracy_top-5: 98.5294
2024-02-26 01:09:11,920 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-02-26 01:09:14,226 - mmcls - INFO - Epoch(val) [75][9]	accuracy_top-1: 77.2059, accuracy_top-5: 98.5294
2024-02-26 01:09:23,290 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-02-26 01:09:25,883 - mmcls - INFO - Epoch(val) [76][9]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-26 01:09:34,941 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-02-26 01:09:37,180 - mmcls - INFO - Epoch(val) [77][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.0588
2024-02-26 01:09:45,895 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-02-26 01:09:48,198 - mmcls - INFO - Epoch(val) [78][9]	accuracy_top-1: 79.4118, accuracy_top-5: 97.7941
2024-02-26 01:09:57,118 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-02-26 01:09:59,532 - mmcls - INFO - Epoch(val) [79][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:10:08,710 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-02-26 01:10:11,258 - mmcls - INFO - Epoch(val) [80][9]	accuracy_top-1: 82.3529, accuracy_top-5: 97.7941
2024-02-26 01:10:20,269 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-02-26 01:10:22,742 - mmcls - INFO - Epoch(val) [81][9]	accuracy_top-1: 80.8824, accuracy_top-5: 97.7941
2024-02-26 01:10:31,583 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-02-26 01:10:34,190 - mmcls - INFO - Epoch(val) [82][9]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:10:43,260 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-02-26 01:10:45,642 - mmcls - INFO - Epoch(val) [83][9]	accuracy_top-1: 83.0882, accuracy_top-5: 98.5294
2024-02-26 01:10:55,018 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-02-26 01:10:57,470 - mmcls - INFO - Epoch(val) [84][9]	accuracy_top-1: 83.0882, accuracy_top-5: 96.3235
2024-02-26 01:11:06,726 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-02-26 01:11:09,089 - mmcls - INFO - Epoch(val) [85][9]	accuracy_top-1: 75.7353, accuracy_top-5: 95.5882
2024-02-26 01:11:18,043 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-02-26 01:11:20,623 - mmcls - INFO - Epoch(val) [86][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:11:29,462 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-02-26 01:11:31,805 - mmcls - INFO - Epoch(val) [87][9]	accuracy_top-1: 82.3529, accuracy_top-5: 96.3235
2024-02-26 01:11:40,843 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-02-26 01:11:43,280 - mmcls - INFO - Epoch(val) [88][9]	accuracy_top-1: 81.6176, accuracy_top-5: 98.5294
2024-02-26 01:11:52,195 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-02-26 01:11:54,569 - mmcls - INFO - Epoch(val) [89][9]	accuracy_top-1: 84.5588, accuracy_top-5: 97.7941
2024-02-26 01:12:03,663 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-02-26 01:12:06,058 - mmcls - INFO - Epoch(val) [90][9]	accuracy_top-1: 83.8235, accuracy_top-5: 97.7941
2024-02-26 01:12:15,136 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-02-26 01:12:17,468 - mmcls - INFO - Epoch(val) [91][9]	accuracy_top-1: 83.0882, accuracy_top-5: 96.3235
2024-02-26 01:12:26,639 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-02-26 01:12:29,234 - mmcls - INFO - Epoch(val) [92][9]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 01:12:38,378 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-02-26 01:12:41,009 - mmcls - INFO - Epoch(val) [93][9]	accuracy_top-1: 80.8824, accuracy_top-5: 97.7941
2024-02-26 01:12:50,437 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-02-26 01:12:52,913 - mmcls - INFO - Epoch(val) [94][9]	accuracy_top-1: 78.6765, accuracy_top-5: 97.7941
2024-02-26 01:13:02,306 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-02-26 01:13:04,740 - mmcls - INFO - Epoch(val) [95][9]	accuracy_top-1: 83.8235, accuracy_top-5: 97.0588
2024-02-26 01:13:14,144 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-02-26 01:13:16,489 - mmcls - INFO - Epoch(val) [96][9]	accuracy_top-1: 83.0882, accuracy_top-5: 98.5294
2024-02-26 01:13:26,107 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-02-26 01:13:28,387 - mmcls - INFO - Epoch(val) [97][9]	accuracy_top-1: 83.0882, accuracy_top-5: 98.5294
2024-02-26 01:13:37,304 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-02-26 01:13:39,566 - mmcls - INFO - Epoch(val) [98][9]	accuracy_top-1: 82.3529, accuracy_top-5: 98.5294
2024-02-26 01:13:48,958 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-02-26 01:13:51,367 - mmcls - INFO - Epoch(val) [99][9]	accuracy_top-1: 81.6176, accuracy_top-5: 97.7941
2024-02-26 01:14:00,515 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-02-26 01:14:03,003 - mmcls - INFO - Epoch(val) [100][9]	accuracy_top-1: 83.8235, accuracy_top-5: 97.7941
2024-02-26 01:14:12,410 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-02-26 01:14:14,826 - mmcls - INFO - Epoch(val) [101][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:14:23,599 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-02-26 01:14:25,940 - mmcls - INFO - Epoch(val) [102][9]	accuracy_top-1: 88.9706, accuracy_top-5: 98.5294
2024-02-26 01:14:35,122 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-02-26 01:14:37,479 - mmcls - INFO - Epoch(val) [103][9]	accuracy_top-1: 88.9706, accuracy_top-5: 98.5294
2024-02-26 01:14:46,518 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-02-26 01:14:48,857 - mmcls - INFO - Epoch(val) [104][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:14:57,662 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-02-26 01:14:59,964 - mmcls - INFO - Epoch(val) [105][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:15:10,008 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-02-26 01:15:12,548 - mmcls - INFO - Epoch(val) [106][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:15:21,535 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-02-26 01:15:23,962 - mmcls - INFO - Epoch(val) [107][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:15:33,189 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-02-26 01:15:35,814 - mmcls - INFO - Epoch(val) [108][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:15:44,624 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-02-26 01:15:47,180 - mmcls - INFO - Epoch(val) [109][9]	accuracy_top-1: 88.9706, accuracy_top-5: 98.5294
2024-02-26 01:15:56,422 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-02-26 01:15:58,991 - mmcls - INFO - Epoch(val) [110][9]	accuracy_top-1: 90.4412, accuracy_top-5: 98.5294
2024-02-26 01:16:08,000 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-02-26 01:16:10,467 - mmcls - INFO - Epoch(val) [111][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:16:19,348 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-02-26 01:16:21,784 - mmcls - INFO - Epoch(val) [112][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:16:31,216 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-02-26 01:16:33,635 - mmcls - INFO - Epoch(val) [113][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:16:43,018 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-02-26 01:16:45,517 - mmcls - INFO - Epoch(val) [114][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:16:54,359 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-02-26 01:16:56,831 - mmcls - INFO - Epoch(val) [115][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:17:05,846 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-02-26 01:17:08,193 - mmcls - INFO - Epoch(val) [116][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:17:17,295 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-02-26 01:17:19,762 - mmcls - INFO - Epoch(val) [117][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:17:28,796 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-02-26 01:17:31,288 - mmcls - INFO - Epoch(val) [118][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:17:40,263 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-02-26 01:17:42,576 - mmcls - INFO - Epoch(val) [119][9]	accuracy_top-1: 85.2941, accuracy_top-5: 98.5294
2024-02-26 01:17:52,211 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-02-26 01:17:54,560 - mmcls - INFO - Epoch(val) [120][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:18:03,786 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-02-26 01:18:06,064 - mmcls - INFO - Epoch(val) [121][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:18:15,215 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-02-26 01:18:17,730 - mmcls - INFO - Epoch(val) [122][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:18:26,724 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-02-26 01:18:29,129 - mmcls - INFO - Epoch(val) [123][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:18:38,042 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-02-26 01:18:40,433 - mmcls - INFO - Epoch(val) [124][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:18:49,747 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-02-26 01:18:52,127 - mmcls - INFO - Epoch(val) [125][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:19:01,030 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-02-26 01:19:03,445 - mmcls - INFO - Epoch(val) [126][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:19:12,689 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-02-26 01:19:15,283 - mmcls - INFO - Epoch(val) [127][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:19:24,448 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-02-26 01:19:27,041 - mmcls - INFO - Epoch(val) [128][9]	accuracy_top-1: 88.9706, accuracy_top-5: 98.5294
2024-02-26 01:19:36,044 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-02-26 01:19:38,440 - mmcls - INFO - Epoch(val) [129][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:19:47,947 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-02-26 01:19:50,287 - mmcls - INFO - Epoch(val) [130][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:19:59,656 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-02-26 01:20:02,174 - mmcls - INFO - Epoch(val) [131][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:20:11,047 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-02-26 01:20:13,457 - mmcls - INFO - Epoch(val) [132][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:20:22,617 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-02-26 01:20:25,075 - mmcls - INFO - Epoch(val) [133][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:20:34,098 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-02-26 01:20:36,401 - mmcls - INFO - Epoch(val) [134][9]	accuracy_top-1: 88.9706, accuracy_top-5: 99.2647
2024-02-26 01:20:45,419 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-02-26 01:20:47,807 - mmcls - INFO - Epoch(val) [135][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:20:56,968 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-02-26 01:20:59,387 - mmcls - INFO - Epoch(val) [136][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:21:08,023 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-02-26 01:21:10,555 - mmcls - INFO - Epoch(val) [137][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:21:19,780 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-02-26 01:21:22,187 - mmcls - INFO - Epoch(val) [138][9]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 01:21:31,269 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-02-26 01:21:33,865 - mmcls - INFO - Epoch(val) [139][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:21:42,924 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-02-26 01:21:45,208 - mmcls - INFO - Epoch(val) [140][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:21:53,999 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-02-26 01:21:56,421 - mmcls - INFO - Epoch(val) [141][9]	accuracy_top-1: 85.2941, accuracy_top-5: 99.2647
2024-02-26 01:22:05,410 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-02-26 01:22:07,832 - mmcls - INFO - Epoch(val) [142][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:22:16,373 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-02-26 01:22:18,824 - mmcls - INFO - Epoch(val) [143][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:22:27,659 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-02-26 01:22:29,937 - mmcls - INFO - Epoch(val) [144][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:22:39,160 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-02-26 01:22:41,660 - mmcls - INFO - Epoch(val) [145][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:22:50,672 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-02-26 01:22:53,035 - mmcls - INFO - Epoch(val) [146][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:23:01,987 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-02-26 01:23:04,354 - mmcls - INFO - Epoch(val) [147][9]	accuracy_top-1: 85.2941, accuracy_top-5: 98.5294
2024-02-26 01:23:13,411 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-02-26 01:23:15,773 - mmcls - INFO - Epoch(val) [148][9]	accuracy_top-1: 87.5000, accuracy_top-5: 98.5294
2024-02-26 01:23:24,976 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-02-26 01:23:27,353 - mmcls - INFO - Epoch(val) [149][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:23:36,779 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-02-26 01:23:39,138 - mmcls - INFO - Epoch(val) [150][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:23:48,016 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-02-26 01:23:50,341 - mmcls - INFO - Epoch(val) [151][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:23:59,325 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-02-26 01:24:01,648 - mmcls - INFO - Epoch(val) [152][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:24:10,391 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-02-26 01:24:12,915 - mmcls - INFO - Epoch(val) [153][9]	accuracy_top-1: 85.2941, accuracy_top-5: 98.5294
2024-02-26 01:24:22,313 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-02-26 01:24:24,751 - mmcls - INFO - Epoch(val) [154][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:24:34,038 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-02-26 01:24:36,676 - mmcls - INFO - Epoch(val) [155][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:24:45,777 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-02-26 01:24:48,176 - mmcls - INFO - Epoch(val) [156][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:24:57,037 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-02-26 01:24:59,487 - mmcls - INFO - Epoch(val) [157][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:25:08,487 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-02-26 01:25:10,980 - mmcls - INFO - Epoch(val) [158][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:25:19,952 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-02-26 01:25:22,299 - mmcls - INFO - Epoch(val) [159][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:25:31,297 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-02-26 01:25:33,741 - mmcls - INFO - Epoch(val) [160][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:25:42,862 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-02-26 01:25:45,337 - mmcls - INFO - Epoch(val) [161][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:25:54,301 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-02-26 01:25:56,761 - mmcls - INFO - Epoch(val) [162][9]	accuracy_top-1: 86.0294, accuracy_top-5: 98.5294
2024-02-26 01:26:05,613 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-02-26 01:26:08,012 - mmcls - INFO - Epoch(val) [163][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:26:17,028 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-02-26 01:26:19,556 - mmcls - INFO - Epoch(val) [164][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:26:28,676 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-02-26 01:26:31,333 - mmcls - INFO - Epoch(val) [165][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:26:40,520 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-02-26 01:26:42,976 - mmcls - INFO - Epoch(val) [166][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:26:52,122 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-02-26 01:26:54,479 - mmcls - INFO - Epoch(val) [167][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:27:03,458 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-02-26 01:27:05,901 - mmcls - INFO - Epoch(val) [168][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:27:15,586 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-02-26 01:27:18,101 - mmcls - INFO - Epoch(val) [169][9]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 01:27:27,292 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-02-26 01:27:29,679 - mmcls - INFO - Epoch(val) [170][9]	accuracy_top-1: 86.0294, accuracy_top-5: 99.2647
2024-02-26 01:27:38,813 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-02-26 01:27:41,220 - mmcls - INFO - Epoch(val) [171][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:27:50,128 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-02-26 01:27:52,548 - mmcls - INFO - Epoch(val) [172][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:28:01,558 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-02-26 01:28:03,938 - mmcls - INFO - Epoch(val) [173][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:28:12,776 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-02-26 01:28:15,184 - mmcls - INFO - Epoch(val) [174][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:28:24,196 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-02-26 01:28:26,630 - mmcls - INFO - Epoch(val) [175][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:28:35,659 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-02-26 01:28:38,190 - mmcls - INFO - Epoch(val) [176][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:28:47,074 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-02-26 01:28:49,528 - mmcls - INFO - Epoch(val) [177][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:28:58,212 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-02-26 01:29:00,652 - mmcls - INFO - Epoch(val) [178][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:29:09,727 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-02-26 01:29:12,169 - mmcls - INFO - Epoch(val) [179][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:29:21,119 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-02-26 01:29:23,470 - mmcls - INFO - Epoch(val) [180][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:29:32,883 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-02-26 01:29:35,430 - mmcls - INFO - Epoch(val) [181][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:29:44,347 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-02-26 01:29:46,823 - mmcls - INFO - Epoch(val) [182][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:29:55,658 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-02-26 01:29:58,076 - mmcls - INFO - Epoch(val) [183][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:30:06,947 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-02-26 01:30:09,436 - mmcls - INFO - Epoch(val) [184][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:30:18,296 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-02-26 01:30:20,755 - mmcls - INFO - Epoch(val) [185][9]	accuracy_top-1: 88.2353, accuracy_top-5: 98.5294
2024-02-26 01:30:30,205 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-02-26 01:30:32,668 - mmcls - INFO - Epoch(val) [186][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:30:41,919 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-02-26 01:30:44,603 - mmcls - INFO - Epoch(val) [187][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:30:53,391 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-02-26 01:30:55,820 - mmcls - INFO - Epoch(val) [188][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:31:04,970 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-02-26 01:31:07,309 - mmcls - INFO - Epoch(val) [189][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:31:16,501 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-02-26 01:31:19,141 - mmcls - INFO - Epoch(val) [190][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:31:28,173 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-02-26 01:31:30,538 - mmcls - INFO - Epoch(val) [191][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:31:39,922 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-02-26 01:31:42,233 - mmcls - INFO - Epoch(val) [192][9]	accuracy_top-1: 86.7647, accuracy_top-5: 99.2647
2024-02-26 01:31:51,339 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-02-26 01:31:53,678 - mmcls - INFO - Epoch(val) [193][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:32:02,715 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-02-26 01:32:04,986 - mmcls - INFO - Epoch(val) [194][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:32:14,037 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-02-26 01:32:16,577 - mmcls - INFO - Epoch(val) [195][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:32:25,527 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-02-26 01:32:27,808 - mmcls - INFO - Epoch(val) [196][9]	accuracy_top-1: 88.2353, accuracy_top-5: 99.2647
2024-02-26 01:32:36,921 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-02-26 01:32:39,530 - mmcls - INFO - Epoch(val) [197][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
2024-02-26 01:32:48,649 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-02-26 01:32:51,070 - mmcls - INFO - Epoch(val) [198][9]	accuracy_top-1: 89.7059, accuracy_top-5: 98.5294
2024-02-26 01:33:00,396 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-02-26 01:33:02,813 - mmcls - INFO - Epoch(val) [199][9]	accuracy_top-1: 86.7647, accuracy_top-5: 98.5294
2024-02-26 01:33:12,056 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-02-26 01:33:14,682 - mmcls - INFO - Epoch(val) [200][9]	accuracy_top-1: 87.5000, accuracy_top-5: 99.2647
