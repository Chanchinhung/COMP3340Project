2024-02-25 11:37:11,736 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+35d7618
------------------------------------------------------------

2024-02-25 11:37:11,738 - mmcls - INFO - Distributed training: False
2024-02-25 11:37:11,933 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/test',
        ann_file='data/flowers/meta/test.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_flowers_bs16_lr0.001'
gpu_ids = range(0, 1)

2024-02-25 11:37:12,228 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-02-25 11:37:12,514 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-02-25 11:37:16,168 - mmcls - INFO - Start running, host: cshtimmy@gpu2-comp-102, work_dir: /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs16_lr0.001
2024-02-25 11:37:16,169 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-02-25 11:37:16,169 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-02-25 11:37:16,169 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/cshtimmy/COMP3340Project/CNN_Image_Classification_Code/output/resnet34_flowers_bs16_lr0.001 by HardDiskBackend.
2024-02-25 11:37:29,212 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-02-25 11:37:32,037 - mmcls - INFO - Epoch(val) [1][9]	accuracy_top-1: 26.4706, accuracy_top-5: 74.2647
2024-02-25 11:37:42,306 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-02-25 11:37:44,544 - mmcls - INFO - Epoch(val) [2][9]	accuracy_top-1: 30.8824, accuracy_top-5: 86.0294
2024-02-25 11:37:53,572 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-02-25 11:37:55,911 - mmcls - INFO - Epoch(val) [3][9]	accuracy_top-1: 41.1765, accuracy_top-5: 91.1765
2024-02-25 11:38:04,905 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-02-25 11:38:07,084 - mmcls - INFO - Epoch(val) [4][9]	accuracy_top-1: 41.9118, accuracy_top-5: 89.7059
2024-02-25 11:38:16,265 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-02-25 11:38:18,545 - mmcls - INFO - Epoch(val) [5][9]	accuracy_top-1: 43.3824, accuracy_top-5: 92.6471
2024-02-25 11:38:27,601 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-02-25 11:38:29,799 - mmcls - INFO - Epoch(val) [6][9]	accuracy_top-1: 46.3235, accuracy_top-5: 91.9118
2024-02-25 11:38:38,809 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-02-25 11:38:41,084 - mmcls - INFO - Epoch(val) [7][9]	accuracy_top-1: 49.2647, accuracy_top-5: 92.6471
2024-02-25 11:38:50,340 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-02-25 11:38:52,706 - mmcls - INFO - Epoch(val) [8][9]	accuracy_top-1: 47.7941, accuracy_top-5: 92.6471
2024-02-25 11:39:01,802 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-02-25 11:39:04,048 - mmcls - INFO - Epoch(val) [9][9]	accuracy_top-1: 48.5294, accuracy_top-5: 92.6471
2024-02-25 11:39:13,012 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-02-25 11:39:15,326 - mmcls - INFO - Epoch(val) [10][9]	accuracy_top-1: 53.6765, accuracy_top-5: 93.3824
2024-02-25 11:39:24,358 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-02-25 11:39:26,600 - mmcls - INFO - Epoch(val) [11][9]	accuracy_top-1: 52.9412, accuracy_top-5: 93.3824
2024-02-25 11:39:35,451 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-02-25 11:39:37,682 - mmcls - INFO - Epoch(val) [12][9]	accuracy_top-1: 52.2059, accuracy_top-5: 94.1176
2024-02-25 11:39:46,779 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-02-25 11:39:48,945 - mmcls - INFO - Epoch(val) [13][9]	accuracy_top-1: 52.9412, accuracy_top-5: 91.9118
2024-02-25 11:39:57,934 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-02-25 11:40:00,119 - mmcls - INFO - Epoch(val) [14][9]	accuracy_top-1: 54.4118, accuracy_top-5: 93.3824
2024-02-25 11:40:08,943 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-02-25 11:40:11,139 - mmcls - INFO - Epoch(val) [15][9]	accuracy_top-1: 55.1471, accuracy_top-5: 91.9118
2024-02-25 11:40:20,153 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-02-25 11:40:22,444 - mmcls - INFO - Epoch(val) [16][9]	accuracy_top-1: 51.4706, accuracy_top-5: 93.3824
2024-02-25 11:40:31,526 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-02-25 11:40:33,711 - mmcls - INFO - Epoch(val) [17][9]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 11:40:42,578 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-02-25 11:40:44,816 - mmcls - INFO - Epoch(val) [18][9]	accuracy_top-1: 52.9412, accuracy_top-5: 92.6471
2024-02-25 11:40:53,689 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-02-25 11:40:56,121 - mmcls - INFO - Epoch(val) [19][9]	accuracy_top-1: 52.9412, accuracy_top-5: 92.6471
2024-02-25 11:41:05,232 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-02-25 11:41:07,499 - mmcls - INFO - Epoch(val) [20][9]	accuracy_top-1: 54.4118, accuracy_top-5: 93.3824
2024-02-25 11:41:16,506 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-02-25 11:41:18,764 - mmcls - INFO - Epoch(val) [21][9]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 11:41:27,927 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-02-25 11:41:30,095 - mmcls - INFO - Epoch(val) [22][9]	accuracy_top-1: 57.3529, accuracy_top-5: 93.3824
2024-02-25 11:41:39,550 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-02-25 11:41:41,742 - mmcls - INFO - Epoch(val) [23][9]	accuracy_top-1: 56.6176, accuracy_top-5: 94.1176
2024-02-25 11:41:50,697 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-02-25 11:41:52,876 - mmcls - INFO - Epoch(val) [24][9]	accuracy_top-1: 62.5000, accuracy_top-5: 91.9118
2024-02-25 11:42:01,770 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-02-25 11:42:04,151 - mmcls - INFO - Epoch(val) [25][9]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 11:42:13,355 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-02-25 11:42:15,692 - mmcls - INFO - Epoch(val) [26][9]	accuracy_top-1: 58.8235, accuracy_top-5: 93.3824
2024-02-25 11:42:24,640 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-02-25 11:42:26,860 - mmcls - INFO - Epoch(val) [27][9]	accuracy_top-1: 57.3529, accuracy_top-5: 94.1176
2024-02-25 11:42:35,895 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-02-25 11:42:37,839 - mmcls - INFO - Epoch(val) [28][9]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 11:42:47,147 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-02-25 11:42:49,241 - mmcls - INFO - Epoch(val) [29][9]	accuracy_top-1: 58.8235, accuracy_top-5: 94.8529
2024-02-25 11:42:58,353 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-02-25 11:43:00,531 - mmcls - INFO - Epoch(val) [30][9]	accuracy_top-1: 63.9706, accuracy_top-5: 90.4412
2024-02-25 11:43:09,440 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-02-25 11:43:11,591 - mmcls - INFO - Epoch(val) [31][9]	accuracy_top-1: 61.7647, accuracy_top-5: 92.6471
2024-02-25 11:43:20,723 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-02-25 11:43:22,925 - mmcls - INFO - Epoch(val) [32][9]	accuracy_top-1: 55.8824, accuracy_top-5: 94.1176
2024-02-25 11:43:31,919 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-02-25 11:43:34,040 - mmcls - INFO - Epoch(val) [33][9]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 11:43:43,016 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-02-25 11:43:45,188 - mmcls - INFO - Epoch(val) [34][9]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 11:43:54,140 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-02-25 11:43:56,377 - mmcls - INFO - Epoch(val) [35][9]	accuracy_top-1: 59.5588, accuracy_top-5: 92.6471
2024-02-25 11:44:05,548 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-02-25 11:44:07,709 - mmcls - INFO - Epoch(val) [36][9]	accuracy_top-1: 61.0294, accuracy_top-5: 92.6471
2024-02-25 11:44:16,766 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-02-25 11:44:19,021 - mmcls - INFO - Epoch(val) [37][9]	accuracy_top-1: 57.3529, accuracy_top-5: 94.1176
2024-02-25 11:44:27,989 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-02-25 11:44:30,173 - mmcls - INFO - Epoch(val) [38][9]	accuracy_top-1: 65.4412, accuracy_top-5: 93.3824
2024-02-25 11:44:39,229 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-02-25 11:44:41,409 - mmcls - INFO - Epoch(val) [39][9]	accuracy_top-1: 57.3529, accuracy_top-5: 93.3824
2024-02-25 11:44:50,254 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-02-25 11:44:52,468 - mmcls - INFO - Epoch(val) [40][9]	accuracy_top-1: 63.2353, accuracy_top-5: 91.9118
2024-02-25 11:45:01,472 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-02-25 11:45:03,625 - mmcls - INFO - Epoch(val) [41][9]	accuracy_top-1: 61.0294, accuracy_top-5: 93.3824
2024-02-25 11:45:12,602 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-02-25 11:45:14,986 - mmcls - INFO - Epoch(val) [42][9]	accuracy_top-1: 58.8235, accuracy_top-5: 94.1176
2024-02-25 11:45:23,826 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-02-25 11:45:26,048 - mmcls - INFO - Epoch(val) [43][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.1176
2024-02-25 11:45:35,378 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-02-25 11:45:37,620 - mmcls - INFO - Epoch(val) [44][9]	accuracy_top-1: 62.5000, accuracy_top-5: 91.9118
2024-02-25 11:45:47,322 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-02-25 11:45:49,491 - mmcls - INFO - Epoch(val) [45][9]	accuracy_top-1: 64.7059, accuracy_top-5: 94.8529
2024-02-25 11:45:58,649 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-02-25 11:46:00,938 - mmcls - INFO - Epoch(val) [46][9]	accuracy_top-1: 63.2353, accuracy_top-5: 92.6471
2024-02-25 11:46:10,302 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-02-25 11:46:12,507 - mmcls - INFO - Epoch(val) [47][9]	accuracy_top-1: 63.9706, accuracy_top-5: 94.1176
2024-02-25 11:46:21,769 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-02-25 11:46:23,958 - mmcls - INFO - Epoch(val) [48][9]	accuracy_top-1: 60.2941, accuracy_top-5: 91.9118
2024-02-25 11:46:33,171 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-02-25 11:46:35,459 - mmcls - INFO - Epoch(val) [49][9]	accuracy_top-1: 60.2941, accuracy_top-5: 92.6471
2024-02-25 11:46:44,992 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-02-25 11:46:47,395 - mmcls - INFO - Epoch(val) [50][9]	accuracy_top-1: 63.9706, accuracy_top-5: 95.5882
2024-02-25 11:46:56,690 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-02-25 11:46:58,974 - mmcls - INFO - Epoch(val) [51][9]	accuracy_top-1: 62.5000, accuracy_top-5: 93.3824
2024-02-25 11:47:08,073 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-02-25 11:47:10,387 - mmcls - INFO - Epoch(val) [52][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.8529
2024-02-25 11:47:19,673 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-02-25 11:47:21,578 - mmcls - INFO - Epoch(val) [53][9]	accuracy_top-1: 63.2353, accuracy_top-5: 94.8529
2024-02-25 11:47:30,871 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-02-25 11:47:33,081 - mmcls - INFO - Epoch(val) [54][9]	accuracy_top-1: 62.5000, accuracy_top-5: 93.3824
2024-02-25 11:47:41,938 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-02-25 11:47:44,156 - mmcls - INFO - Epoch(val) [55][9]	accuracy_top-1: 64.7059, accuracy_top-5: 94.1176
2024-02-25 11:47:53,130 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-02-25 11:47:55,579 - mmcls - INFO - Epoch(val) [56][9]	accuracy_top-1: 65.4412, accuracy_top-5: 95.5882
2024-02-25 11:48:05,088 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-02-25 11:48:07,278 - mmcls - INFO - Epoch(val) [57][9]	accuracy_top-1: 64.7059, accuracy_top-5: 93.3824
2024-02-25 11:48:16,285 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-02-25 11:48:18,694 - mmcls - INFO - Epoch(val) [58][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.8529
2024-02-25 11:48:27,590 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-02-25 11:48:29,848 - mmcls - INFO - Epoch(val) [59][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.1176
2024-02-25 11:48:38,589 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-02-25 11:48:40,944 - mmcls - INFO - Epoch(val) [60][9]	accuracy_top-1: 61.7647, accuracy_top-5: 94.8529
2024-02-25 11:48:49,765 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-02-25 11:48:52,262 - mmcls - INFO - Epoch(val) [61][9]	accuracy_top-1: 65.4412, accuracy_top-5: 93.3824
2024-02-25 11:49:01,168 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-02-25 11:49:03,412 - mmcls - INFO - Epoch(val) [62][9]	accuracy_top-1: 58.0882, accuracy_top-5: 94.8529
2024-02-25 11:49:12,461 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-02-25 11:49:15,086 - mmcls - INFO - Epoch(val) [63][9]	accuracy_top-1: 62.5000, accuracy_top-5: 96.3235
2024-02-25 11:49:24,519 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-02-25 11:49:26,784 - mmcls - INFO - Epoch(val) [64][9]	accuracy_top-1: 62.5000, accuracy_top-5: 94.1176
2024-02-25 11:49:36,327 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-02-25 11:49:38,586 - mmcls - INFO - Epoch(val) [65][9]	accuracy_top-1: 64.7059, accuracy_top-5: 94.1176
2024-02-25 11:49:48,118 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-02-25 11:49:50,218 - mmcls - INFO - Epoch(val) [66][9]	accuracy_top-1: 65.4412, accuracy_top-5: 93.3824
2024-02-25 11:49:59,265 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-02-25 11:50:01,499 - mmcls - INFO - Epoch(val) [67][9]	accuracy_top-1: 60.2941, accuracy_top-5: 93.3824
2024-02-25 11:50:10,907 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-02-25 11:50:13,151 - mmcls - INFO - Epoch(val) [68][9]	accuracy_top-1: 57.3529, accuracy_top-5: 95.5882
2024-02-25 11:50:22,761 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-02-25 11:50:25,059 - mmcls - INFO - Epoch(val) [69][9]	accuracy_top-1: 60.2941, accuracy_top-5: 94.1176
2024-02-25 11:50:34,619 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-02-25 11:50:37,014 - mmcls - INFO - Epoch(val) [70][9]	accuracy_top-1: 61.0294, accuracy_top-5: 95.5882
2024-02-25 11:50:46,344 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-02-25 11:50:48,566 - mmcls - INFO - Epoch(val) [71][9]	accuracy_top-1: 65.4412, accuracy_top-5: 95.5882
2024-02-25 11:50:57,761 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-02-25 11:51:00,052 - mmcls - INFO - Epoch(val) [72][9]	accuracy_top-1: 66.9118, accuracy_top-5: 93.3824
2024-02-25 11:51:09,453 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-02-25 11:51:11,639 - mmcls - INFO - Epoch(val) [73][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.1176
2024-02-25 11:51:20,864 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-02-25 11:51:23,056 - mmcls - INFO - Epoch(val) [74][9]	accuracy_top-1: 63.2353, accuracy_top-5: 94.1176
2024-02-25 11:51:32,370 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-02-25 11:51:34,510 - mmcls - INFO - Epoch(val) [75][9]	accuracy_top-1: 61.7647, accuracy_top-5: 93.3824
2024-02-25 11:51:44,386 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-02-25 11:51:46,567 - mmcls - INFO - Epoch(val) [76][9]	accuracy_top-1: 59.5588, accuracy_top-5: 93.3824
2024-02-25 11:51:55,899 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-02-25 11:51:58,108 - mmcls - INFO - Epoch(val) [77][9]	accuracy_top-1: 63.9706, accuracy_top-5: 94.1176
2024-02-25 11:52:07,274 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-02-25 11:52:09,584 - mmcls - INFO - Epoch(val) [78][9]	accuracy_top-1: 63.2353, accuracy_top-5: 97.0588
2024-02-25 11:52:18,886 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-02-25 11:52:21,049 - mmcls - INFO - Epoch(val) [79][9]	accuracy_top-1: 59.5588, accuracy_top-5: 94.1176
2024-02-25 11:52:30,166 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-02-25 11:52:32,315 - mmcls - INFO - Epoch(val) [80][9]	accuracy_top-1: 63.9706, accuracy_top-5: 93.3824
2024-02-25 11:52:41,501 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-02-25 11:52:43,656 - mmcls - INFO - Epoch(val) [81][9]	accuracy_top-1: 63.9706, accuracy_top-5: 93.3824
2024-02-25 11:52:52,907 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-02-25 11:52:55,136 - mmcls - INFO - Epoch(val) [82][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.1176
2024-02-25 11:53:04,351 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-02-25 11:53:06,433 - mmcls - INFO - Epoch(val) [83][9]	accuracy_top-1: 65.4412, accuracy_top-5: 95.5882
2024-02-25 11:53:15,709 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-02-25 11:53:17,925 - mmcls - INFO - Epoch(val) [84][9]	accuracy_top-1: 62.5000, accuracy_top-5: 93.3824
2024-02-25 11:53:27,281 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-02-25 11:53:29,482 - mmcls - INFO - Epoch(val) [85][9]	accuracy_top-1: 58.0882, accuracy_top-5: 94.8529
2024-02-25 11:53:38,781 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-02-25 11:53:41,000 - mmcls - INFO - Epoch(val) [86][9]	accuracy_top-1: 61.0294, accuracy_top-5: 94.1176
2024-02-25 11:53:50,180 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-02-25 11:53:52,405 - mmcls - INFO - Epoch(val) [87][9]	accuracy_top-1: 60.2941, accuracy_top-5: 96.3235
2024-02-25 11:54:01,375 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-02-25 11:54:03,696 - mmcls - INFO - Epoch(val) [88][9]	accuracy_top-1: 63.2353, accuracy_top-5: 96.3235
2024-02-25 11:54:12,881 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-02-25 11:54:15,182 - mmcls - INFO - Epoch(val) [89][9]	accuracy_top-1: 60.2941, accuracy_top-5: 96.3235
2024-02-25 11:54:24,107 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-02-25 11:54:26,274 - mmcls - INFO - Epoch(val) [90][9]	accuracy_top-1: 68.3824, accuracy_top-5: 92.6471
2024-02-25 11:54:35,115 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-02-25 11:54:37,610 - mmcls - INFO - Epoch(val) [91][9]	accuracy_top-1: 63.9706, accuracy_top-5: 93.3824
2024-02-25 11:54:46,936 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-02-25 11:54:49,235 - mmcls - INFO - Epoch(val) [92][9]	accuracy_top-1: 66.9118, accuracy_top-5: 92.6471
2024-02-25 11:54:58,412 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-02-25 11:55:00,800 - mmcls - INFO - Epoch(val) [93][9]	accuracy_top-1: 63.2353, accuracy_top-5: 96.3235
2024-02-25 11:55:09,734 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-02-25 11:55:12,013 - mmcls - INFO - Epoch(val) [94][9]	accuracy_top-1: 63.9706, accuracy_top-5: 93.3824
2024-02-25 11:55:21,344 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-02-25 11:55:23,497 - mmcls - INFO - Epoch(val) [95][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 11:55:32,727 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-02-25 11:55:35,010 - mmcls - INFO - Epoch(val) [96][9]	accuracy_top-1: 66.1765, accuracy_top-5: 97.0588
2024-02-25 11:55:44,220 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-02-25 11:55:46,423 - mmcls - INFO - Epoch(val) [97][9]	accuracy_top-1: 61.0294, accuracy_top-5: 94.1176
2024-02-25 11:55:55,713 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-02-25 11:55:57,889 - mmcls - INFO - Epoch(val) [98][9]	accuracy_top-1: 61.7647, accuracy_top-5: 94.8529
2024-02-25 11:56:06,938 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-02-25 11:56:09,186 - mmcls - INFO - Epoch(val) [99][9]	accuracy_top-1: 64.7059, accuracy_top-5: 92.6471
2024-02-25 11:56:18,487 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-02-25 11:56:20,632 - mmcls - INFO - Epoch(val) [100][9]	accuracy_top-1: 63.9706, accuracy_top-5: 97.0588
2024-02-25 11:56:29,859 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-02-25 11:56:32,221 - mmcls - INFO - Epoch(val) [101][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.8529
2024-02-25 11:56:41,308 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-02-25 11:56:43,499 - mmcls - INFO - Epoch(val) [102][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-25 11:56:53,187 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-02-25 11:56:55,417 - mmcls - INFO - Epoch(val) [103][9]	accuracy_top-1: 66.1765, accuracy_top-5: 94.8529
2024-02-25 11:57:04,258 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-02-25 11:57:06,689 - mmcls - INFO - Epoch(val) [104][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.8529
2024-02-25 11:57:15,493 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-02-25 11:57:17,726 - mmcls - INFO - Epoch(val) [105][9]	accuracy_top-1: 66.1765, accuracy_top-5: 94.8529
2024-02-25 11:57:26,672 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-02-25 11:57:28,731 - mmcls - INFO - Epoch(val) [106][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-25 11:57:37,565 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-02-25 11:57:39,659 - mmcls - INFO - Epoch(val) [107][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.8529
2024-02-25 11:57:48,585 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-02-25 11:57:50,807 - mmcls - INFO - Epoch(val) [108][9]	accuracy_top-1: 67.6471, accuracy_top-5: 95.5882
2024-02-25 11:58:00,028 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-02-25 11:58:02,393 - mmcls - INFO - Epoch(val) [109][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 11:58:11,665 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-02-25 11:58:13,862 - mmcls - INFO - Epoch(val) [110][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 11:58:22,812 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-02-25 11:58:24,990 - mmcls - INFO - Epoch(val) [111][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.1176
2024-02-25 11:58:34,034 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-02-25 11:58:36,245 - mmcls - INFO - Epoch(val) [112][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 11:58:45,271 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-02-25 11:58:47,409 - mmcls - INFO - Epoch(val) [113][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.1176
2024-02-25 11:58:56,315 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-02-25 11:58:58,417 - mmcls - INFO - Epoch(val) [114][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.1176
2024-02-25 11:59:07,389 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-02-25 11:59:09,592 - mmcls - INFO - Epoch(val) [115][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 11:59:18,688 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-02-25 11:59:21,010 - mmcls - INFO - Epoch(val) [116][9]	accuracy_top-1: 66.1765, accuracy_top-5: 94.8529
2024-02-25 11:59:30,108 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-02-25 11:59:32,411 - mmcls - INFO - Epoch(val) [117][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.1176
2024-02-25 11:59:41,586 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-02-25 11:59:43,915 - mmcls - INFO - Epoch(val) [118][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-25 11:59:53,497 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-02-25 11:59:55,815 - mmcls - INFO - Epoch(val) [119][9]	accuracy_top-1: 66.9118, accuracy_top-5: 93.3824
2024-02-25 12:00:05,357 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-02-25 12:00:07,555 - mmcls - INFO - Epoch(val) [120][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 12:00:16,703 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-02-25 12:00:18,976 - mmcls - INFO - Epoch(val) [121][9]	accuracy_top-1: 70.5882, accuracy_top-5: 94.1176
2024-02-25 12:00:28,240 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-02-25 12:00:30,441 - mmcls - INFO - Epoch(val) [122][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.1176
2024-02-25 12:00:39,978 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-02-25 12:00:42,143 - mmcls - INFO - Epoch(val) [123][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-25 12:00:51,986 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-02-25 12:00:54,119 - mmcls - INFO - Epoch(val) [124][9]	accuracy_top-1: 65.4412, accuracy_top-5: 95.5882
2024-02-25 12:01:03,420 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-02-25 12:01:05,439 - mmcls - INFO - Epoch(val) [125][9]	accuracy_top-1: 66.9118, accuracy_top-5: 95.5882
2024-02-25 12:01:14,835 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-02-25 12:01:17,122 - mmcls - INFO - Epoch(val) [126][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:01:26,433 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-02-25 12:01:28,694 - mmcls - INFO - Epoch(val) [127][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:01:38,475 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-02-25 12:01:40,717 - mmcls - INFO - Epoch(val) [128][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 12:01:49,985 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-02-25 12:01:52,233 - mmcls - INFO - Epoch(val) [129][9]	accuracy_top-1: 67.6471, accuracy_top-5: 96.3235
2024-02-25 12:02:01,452 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-02-25 12:02:03,664 - mmcls - INFO - Epoch(val) [130][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.8529
2024-02-25 12:02:13,185 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-02-25 12:02:15,337 - mmcls - INFO - Epoch(val) [131][9]	accuracy_top-1: 65.4412, accuracy_top-5: 94.8529
2024-02-25 12:02:25,000 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-02-25 12:02:27,441 - mmcls - INFO - Epoch(val) [132][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.1176
2024-02-25 12:02:36,606 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-02-25 12:02:39,026 - mmcls - INFO - Epoch(val) [133][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 12:02:48,168 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-02-25 12:02:50,437 - mmcls - INFO - Epoch(val) [134][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:02:59,755 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-02-25 12:03:02,066 - mmcls - INFO - Epoch(val) [135][9]	accuracy_top-1: 72.7941, accuracy_top-5: 94.8529
2024-02-25 12:03:11,628 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-02-25 12:03:14,074 - mmcls - INFO - Epoch(val) [136][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 12:03:23,252 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-02-25 12:03:25,478 - mmcls - INFO - Epoch(val) [137][9]	accuracy_top-1: 66.1765, accuracy_top-5: 93.3824
2024-02-25 12:03:34,712 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-02-25 12:03:36,955 - mmcls - INFO - Epoch(val) [138][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:03:46,080 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-02-25 12:03:48,608 - mmcls - INFO - Epoch(val) [139][9]	accuracy_top-1: 66.1765, accuracy_top-5: 95.5882
2024-02-25 12:03:57,445 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-02-25 12:03:59,610 - mmcls - INFO - Epoch(val) [140][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.8529
2024-02-25 12:04:08,370 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-02-25 12:04:10,871 - mmcls - INFO - Epoch(val) [141][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-25 12:04:20,386 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-02-25 12:04:22,608 - mmcls - INFO - Epoch(val) [142][9]	accuracy_top-1: 69.1176, accuracy_top-5: 93.3824
2024-02-25 12:04:31,377 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-02-25 12:04:33,516 - mmcls - INFO - Epoch(val) [143][9]	accuracy_top-1: 66.1765, accuracy_top-5: 95.5882
2024-02-25 12:04:43,036 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-02-25 12:04:45,208 - mmcls - INFO - Epoch(val) [144][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-25 12:04:55,043 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-02-25 12:04:57,271 - mmcls - INFO - Epoch(val) [145][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.1176
2024-02-25 12:05:06,583 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-02-25 12:05:08,772 - mmcls - INFO - Epoch(val) [146][9]	accuracy_top-1: 69.1176, accuracy_top-5: 93.3824
2024-02-25 12:05:17,621 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-02-25 12:05:20,070 - mmcls - INFO - Epoch(val) [147][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:05:29,071 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-02-25 12:05:31,265 - mmcls - INFO - Epoch(val) [148][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.1176
2024-02-25 12:05:40,041 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-02-25 12:05:42,257 - mmcls - INFO - Epoch(val) [149][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 12:05:50,952 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-02-25 12:05:53,209 - mmcls - INFO - Epoch(val) [150][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-25 12:06:02,067 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-02-25 12:06:04,228 - mmcls - INFO - Epoch(val) [151][9]	accuracy_top-1: 69.8529, accuracy_top-5: 93.3824
2024-02-25 12:06:13,136 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-02-25 12:06:15,399 - mmcls - INFO - Epoch(val) [152][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.8529
2024-02-25 12:06:24,303 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-02-25 12:06:26,538 - mmcls - INFO - Epoch(val) [153][9]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-25 12:06:35,587 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-02-25 12:06:37,830 - mmcls - INFO - Epoch(val) [154][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:06:47,026 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-02-25 12:06:49,398 - mmcls - INFO - Epoch(val) [155][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:06:58,141 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-02-25 12:07:00,384 - mmcls - INFO - Epoch(val) [156][9]	accuracy_top-1: 69.1176, accuracy_top-5: 93.3824
2024-02-25 12:07:09,512 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-02-25 12:07:11,698 - mmcls - INFO - Epoch(val) [157][9]	accuracy_top-1: 70.5882, accuracy_top-5: 94.1176
2024-02-25 12:07:20,689 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-02-25 12:07:22,948 - mmcls - INFO - Epoch(val) [158][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:07:31,856 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-02-25 12:07:34,092 - mmcls - INFO - Epoch(val) [159][9]	accuracy_top-1: 69.1176, accuracy_top-5: 93.3824
2024-02-25 12:07:43,178 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-02-25 12:07:45,302 - mmcls - INFO - Epoch(val) [160][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:07:53,980 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-02-25 12:07:56,230 - mmcls - INFO - Epoch(val) [161][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:08:05,835 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-02-25 12:08:08,248 - mmcls - INFO - Epoch(val) [162][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:08:17,632 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-02-25 12:08:19,921 - mmcls - INFO - Epoch(val) [163][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.8529
2024-02-25 12:08:29,040 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-02-25 12:08:31,351 - mmcls - INFO - Epoch(val) [164][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.8529
2024-02-25 12:08:40,673 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-02-25 12:08:42,882 - mmcls - INFO - Epoch(val) [165][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:08:52,173 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-02-25 12:08:54,507 - mmcls - INFO - Epoch(val) [166][9]	accuracy_top-1: 66.1765, accuracy_top-5: 94.1176
2024-02-25 12:09:03,787 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-02-25 12:09:06,118 - mmcls - INFO - Epoch(val) [167][9]	accuracy_top-1: 67.6471, accuracy_top-5: 93.3824
2024-02-25 12:09:15,706 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-02-25 12:09:17,911 - mmcls - INFO - Epoch(val) [168][9]	accuracy_top-1: 67.6471, accuracy_top-5: 93.3824
2024-02-25 12:09:27,037 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-02-25 12:09:29,270 - mmcls - INFO - Epoch(val) [169][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.1176
2024-02-25 12:09:38,533 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-02-25 12:09:40,819 - mmcls - INFO - Epoch(val) [170][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.8529
2024-02-25 12:09:50,146 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-02-25 12:09:52,352 - mmcls - INFO - Epoch(val) [171][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:10:01,591 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-02-25 12:10:03,780 - mmcls - INFO - Epoch(val) [172][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:10:12,852 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-02-25 12:10:14,984 - mmcls - INFO - Epoch(val) [173][9]	accuracy_top-1: 67.6471, accuracy_top-5: 93.3824
2024-02-25 12:10:24,392 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-02-25 12:10:26,454 - mmcls - INFO - Epoch(val) [174][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:10:35,424 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-02-25 12:10:37,717 - mmcls - INFO - Epoch(val) [175][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:10:46,769 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-02-25 12:10:48,992 - mmcls - INFO - Epoch(val) [176][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:10:58,161 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-02-25 12:11:00,362 - mmcls - INFO - Epoch(val) [177][9]	accuracy_top-1: 69.8529, accuracy_top-5: 94.1176
2024-02-25 12:11:09,875 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-02-25 12:11:12,175 - mmcls - INFO - Epoch(val) [178][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:11:21,654 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-02-25 12:11:23,731 - mmcls - INFO - Epoch(val) [179][9]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-25 12:11:33,134 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-02-25 12:11:35,327 - mmcls - INFO - Epoch(val) [180][9]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-25 12:11:44,267 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-02-25 12:11:46,515 - mmcls - INFO - Epoch(val) [181][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:11:55,396 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-02-25 12:11:57,604 - mmcls - INFO - Epoch(val) [182][9]	accuracy_top-1: 67.6471, accuracy_top-5: 93.3824
2024-02-25 12:12:06,899 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-02-25 12:12:09,122 - mmcls - INFO - Epoch(val) [183][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:12:18,107 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-02-25 12:12:20,387 - mmcls - INFO - Epoch(val) [184][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:12:29,609 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-02-25 12:12:31,883 - mmcls - INFO - Epoch(val) [185][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:12:41,032 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-02-25 12:12:43,290 - mmcls - INFO - Epoch(val) [186][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.8529
2024-02-25 12:12:52,855 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-02-25 12:12:55,058 - mmcls - INFO - Epoch(val) [187][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:13:04,223 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-02-25 12:13:06,466 - mmcls - INFO - Epoch(val) [188][9]	accuracy_top-1: 66.9118, accuracy_top-5: 94.1176
2024-02-25 12:13:16,129 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-02-25 12:13:18,235 - mmcls - INFO - Epoch(val) [189][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.8529
2024-02-25 12:13:27,699 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-02-25 12:13:29,996 - mmcls - INFO - Epoch(val) [190][9]	accuracy_top-1: 67.6471, accuracy_top-5: 94.8529
2024-02-25 12:13:39,711 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-02-25 12:13:41,973 - mmcls - INFO - Epoch(val) [191][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:13:51,275 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-02-25 12:13:53,509 - mmcls - INFO - Epoch(val) [192][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:14:02,968 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-02-25 12:14:05,222 - mmcls - INFO - Epoch(val) [193][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:14:15,777 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-02-25 12:14:18,090 - mmcls - INFO - Epoch(val) [194][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:14:27,501 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-02-25 12:14:29,677 - mmcls - INFO - Epoch(val) [195][9]	accuracy_top-1: 68.3824, accuracy_top-5: 94.1176
2024-02-25 12:14:39,282 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-02-25 12:14:41,415 - mmcls - INFO - Epoch(val) [196][9]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-25 12:14:50,815 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-02-25 12:14:53,059 - mmcls - INFO - Epoch(val) [197][9]	accuracy_top-1: 69.1176, accuracy_top-5: 94.1176
2024-02-25 12:15:02,447 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-02-25 12:15:04,609 - mmcls - INFO - Epoch(val) [198][9]	accuracy_top-1: 68.3824, accuracy_top-5: 93.3824
2024-02-25 12:15:14,267 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-02-25 12:15:16,530 - mmcls - INFO - Epoch(val) [199][9]	accuracy_top-1: 69.1176, accuracy_top-5: 93.3824
2024-02-25 12:15:25,899 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-02-25 12:15:27,995 - mmcls - INFO - Epoch(val) [200][9]	accuracy_top-1: 67.6471, accuracy_top-5: 93.3824
